--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0 = 0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	while true do
		if (v0 == 0) then
			v1 = tonumber;
			v2 = string.byte;
			v3 = string.char;
			v0 = 1;
		end
		if (v0 == 1) then
			v4 = string.sub;
			v5 = string.gsub;
			v6 = string.rep;
			v0 = 2;
		end
		if (v0 == 4) then
			v13 = select;
			v14 = unpack or table.unpack;
			v15 = tonumber;
			v0 = 5;
		end
		if (v0 == 5) then
			v16 = nil;
			function v16(v25, v26, ...)
				local v27 = 1;
				local v28;
				v25 = v5(v4(v25, 5), "..", function(v39)
					if (v2(v39, 2) == 79) then
						v28 = v1(v4(v39, 1, 1));
						return "";
					else
						local v79 = v3(v1(v39, 16));
						if v28 then
							local v86 = 0;
							local v87;
							while true do
								if (v86 == 1) then
									return v87;
								end
								if (0 == v86) then
									v87 = v6(v79, v28);
									v28 = nil;
									v86 = 1;
								end
							end
						else
							return v79;
						end
					end
				end);
				local function v29(v40, v41, v42)
					if v42 then
						local v80 = (v40 / ((7 - 5) ^ (v41 - ((958 - (345 + 171)) - (224 + 127 + 90))))) % ((2 + (0 - 0)) ^ (((v42 - (1 - (0 + 0))) - (v41 - (1682 - (923 + 758)))) + 1 + 0));
						return v80 - (v80 % (1820 - (490 + 1329)));
					else
						local v81 = 0 + 0;
						local v82;
						while true do
							if (v81 == (0 - 0)) then
								v82 = 2 ^ (v41 - (1335 - (5 + 1329)));
								return (((v40 % (v82 + v82)) >= v82) and (1 - 0)) or (545 - (489 + 56));
							end
						end
					end
				end
				local function v30()
					local v47 = 0 - (0 - 0);
					local v48;
					while true do
						if (v47 == 0) then
							v48 = v2(v25, v27, v27);
							v27 = v27 + (3 - 2) + 0;
							v47 = 90 - (83 + 6);
						end
						if (v47 == (1 - 0)) then
							return v48;
						end
					end
				end
				local function v31()
					local v49, v50 = v2(v25, v27, v27 + 2 + 0);
					v27 = v27 + (9 - 7);
					return (v50 * (696 - 440)) + v49;
				end
				local function v32()
					local v51, v52, v53, v54 = v2(v25, v27, v27 + 3);
					v27 = v27 + (10 - 6);
					return (v54 * (12223654 + 4553562)) + (v53 * 65536) + (v52 * (179 + 77)) + v51;
				end
				local function v33()
					local v55 = 0;
					local v56;
					local v57;
					local v58;
					local v59;
					local v60;
					local v61;
					while true do
						if ((0 - 0) == v55) then
							v56 = v32();
							v57 = v32();
							v55 = 1899 - (969 + 929);
						end
						if ((7 - 4) == v55) then
							if (v60 == ((90 - (88 + 2)) + 0)) then
								if (v59 == (0 - 0)) then
									return v61 * 0;
								else
									v60 = (3777 - 1833) - (737 + 1206);
									v58 = 0 - 0;
								end
							elseif (v60 == (2961 - (697 + 217))) then
								return ((v59 == (1810 - (1212 + 598))) and (v61 * ((3 - 2) / (0 + 0)))) or (v61 * NaN);
							end
							return v9(v61, v60 - (695 + 328)) * (v58 + (v59 / (((3 - 0) - (1301 - (676 + 624))) ^ (1358 - (26 + (1440 - (45 + 115)))))));
						end
						if ((550 - (99 + 449)) == v55) then
							v60 = v29(v57, 1751 - (1309 + 421), 4 + 27);
							v61 = ((v29(v57, 778 - (64 + 682)) == (1311 - (588 + 242 + 480))) and -1) or (45 - (9 + 1 + 34));
							v55 = 7 - 4;
						end
						if (v55 == (1 + 0)) then
							v58 = 1 + 0;
							v59 = (v29(v57, 1, 20) * ((9 - 7) ^ (86 - 54))) + v56;
							v55 = (922 - (375 + 545)) + 0;
						end
					end
				end
				local function v34(v43)
					local v62 = 0 + 0;
					local v63;
					local v64;
					while true do
						if (v62 == (0 + 0)) then
							v63 = nil;
							if not v43 then
								local v90 = 0 + (1612 - (249 + 1363));
								while true do
									if (v90 == (0 + 0)) then
										v43 = v32();
										if (v43 == (0 + 0 + 0)) then
											return "";
										end
										break;
									end
								end
							end
							v62 = 1 - 0;
						end
						if (v62 == (2 + 0)) then
							v64 = {};
							for v88 = 1879 - (1046 + (1889 - 1057)), #v63 do
								v64[v88] = v3(v2(v4(v63, v88, v88)));
							end
							v62 = 3;
						end
						if (v62 == (2 - 1)) then
							v63 = v4(v25, v27, (v27 + v43) - (2 - 1));
							v27 = v27 + v43;
							v62 = 1 + 1;
						end
						if (v62 == 3) then
							return v7(v64);
						end
					end
				end
				local v35 = v32;
				local function v36(...)
					return {...}, v13("#", ...);
				end
				local function v37()
					local v65 = 0;
					local v66;
					local v67;
					local v68;
					local v69;
					local v70;
					local v71;
					local v72;
					local v73;
					local v74;
					while true do
						if (v65 == 1) then
							v68 = nil;
							v69 = nil;
							v65 = 2 - 0;
						end
						if (v65 ~= 0) then
						else
							v66 = 185 - (68 + 117);
							v67 = nil;
							v65 = 1;
						end
						if (v65 ~= (2 + 2)) then
						else
							v74 = nil;
							while true do
								if ((1046 - (84 + 958)) == v66) then
									while true do
										if (v67 ~= 3) then
										else
											v74 = nil;
											while true do
												local v102 = 0;
												while true do
													if (v102 == 0) then
														local v118 = 0;
														local v119;
														while true do
															if (v118 == 0) then
																v119 = 0;
																while true do
																	if (v119 == 0) then
																		if (v68 == 0) then
																			local v130 = 622 - (14 + 608);
																			local v131;
																			local v132;
																			while true do
																				if (v130 == 1) then
																					while true do
																						if (v131 ~= 0) then
																						else
																							v132 = 0 + 0;
																							while true do
																								if (v132 == (0 - 0)) then
																									local v155 = 152 - (33 + 119);
																									local v156;
																									while true do
																										if (v155 == 0) then
																											v156 = 0 - 0;
																											while true do
																												if (v156 ~= (1 + 0)) then
																												else
																													v132 = 1;
																													break;
																												end
																												if (v156 ~= 0) then
																												else
																													v69 = {};
																													v70 = {};
																													v156 = 1 - 0;
																												end
																											end
																											break;
																										end
																									end
																								end
																								if (v132 ~= 2) then
																								else
																									v68 = 397 - (55 + 341);
																									break;
																								end
																								if (v132 ~= (1 + 0)) then
																								else
																									local v157 = 0;
																									local v158;
																									while true do
																										if (v157 == (133 - (40 + 93))) then
																											v158 = 1120 - (570 + 550);
																											while true do
																												if (v158 == (1 + 0)) then
																													v132 = 1382 - (1041 + 339);
																													break;
																												end
																												if (v158 == (0 + 0)) then
																													local v226 = 0 - 0;
																													while true do
																														if (v226 == 1) then
																															v158 = 629 - (592 + 36);
																															break;
																														end
																														if (v226 ~= (0 + 0)) then
																														else
																															v71 = {};
																															v72 = {v69,v70,nil,v71};
																															v226 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (v130 == (0 + 0)) then
																					v131 = 0;
																					v132 = nil;
																					v130 = 4 - 3;
																				end
																			end
																		end
																		if (v68 == (3 - 1)) then
																			local v133 = 0 - 0;
																			local v134;
																			local v135;
																			while true do
																				if (v133 == (0 + 0)) then
																					v134 = 0;
																					v135 = nil;
																					v133 = 1414 - (1181 + 232);
																				end
																				if (v133 == (1089 - (498 + 590))) then
																					while true do
																						if (v134 == (224 - (186 + 38))) then
																							v135 = 622 - (293 + 329);
																							while true do
																								local v142 = 0;
																								while true do
																									if (v142 ~= (0 - 0)) then
																									else
																										if (v135 == 0) then
																											for v218 = 1 + 0, v32() do
																												local v219 = 0;
																												local v220;
																												local v221;
																												while true do
																													if (v219 == (1514 - (989 + 524))) then
																														while true do
																															if (v220 == (0 + 0)) then
																																v221 = v30();
																																if (v29(v221, 1, 1 + 0) == 0) then
																																	local v262 = 1086 - (278 + 808);
																																	local v263;
																																	local v264;
																																	local v265;
																																	local v266;
																																	local v267;
																																	local v268;
																																	while true do
																																		if (v262 == (5 - 3)) then
																																			v267 = nil;
																																			v268 = nil;
																																			v262 = 2 + 1;
																																		end
																																		if (v262 == (1 + 0)) then
																																			v265 = nil;
																																			v266 = nil;
																																			v262 = 2;
																																		end
																																		if (v262 ~= (0 + 0)) then
																																		else
																																			v263 = 0 - 0;
																																			v264 = nil;
																																			v262 = 1 - 0;
																																		end
																																		if (v262 == 3) then
																																			while true do
																																				if (v263 == 1) then
																																					local v278 = 867 - (431 + 436);
																																					while true do
																																						if (v278 == 1) then
																																							v263 = 2;
																																							break;
																																						end
																																						if (v278 == 0) then
																																							v266 = nil;
																																							v267 = nil;
																																							v278 = 1;
																																						end
																																					end
																																				end
																																				if (0 ~= v263) then
																																				else
																																					local v279 = 0;
																																					while true do
																																						if (v279 == 0) then
																																							v264 = 0 - 0;
																																							v265 = nil;
																																							v279 = 1 - 0;
																																						end
																																						if (v279 ~= 1) then
																																						else
																																							v263 = 1 + 0;
																																							break;
																																						end
																																					end
																																				end
																																				if (v263 == (1 + 1)) then
																																					v268 = nil;
																																					while true do
																																						if (v264 ~= (0 + 0)) then
																																						else
																																							local v281 = 1377 - (914 + 463);
																																							while true do
																																								if (v281 == (2 - 1)) then
																																									v264 = 1 + 0;
																																									break;
																																								end
																																								if (v281 == (0 - 0)) then
																																									v265 = 0 - 0;
																																									v266 = nil;
																																									v281 = 1911 - (828 + 1082);
																																								end
																																							end
																																						end
																																						if (1 == v264) then
																																							local v282 = 0 - 0;
																																							local v283;
																																							while true do
																																								if ((0 + 0) == v282) then
																																									v283 = 0;
																																									while true do
																																										if (v283 == 0) then
																																											v267 = nil;
																																											v268 = nil;
																																											v283 = 1;
																																										end
																																										if (v283 == (1 - 0)) then
																																											v264 = 319 - (311 + 6);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																						if (v264 == 2) then
																																							while true do
																																								if ((1 + 0) == v265) then
																																									local v284 = 0;
																																									local v285;
																																									while true do
																																										if (v284 == (0 + 0)) then
																																											v285 = 1624 - (998 + 626);
																																											while true do
																																												if (1 == v285) then
																																													v265 = 2;
																																													break;
																																												end
																																												if (v285 ~= 0) then
																																												else
																																													v268 = {v31(),v31(),nil,nil};
																																													if (v266 == 0) then
																																														local v295 = 0;
																																														local v296;
																																														while true do
																																															if (v295 ~= 0) then
																																															else
																																																v296 = 0 + 0;
																																																while true do
																																																	if (v296 == 0) then
																																																		v268[3] = v31();
																																																		v268[14 - 10] = v31();
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													elseif (v266 == (2 - 1)) then
																																														v268[741 - (711 + 27)] = v32();
																																													elseif (v266 == (2 - 0)) then
																																														v268[1829 - (1452 + 374)] = v32() - (2 ^ (15 + 1));
																																													elseif (v266 == (4 - 1)) then
																																														local v301 = 0;
																																														while true do
																																															if (v301 == (0 + 0)) then
																																																v268[120 - (53 + 64)] = v32() - ((1 + 1) ^ 16);
																																																v268[281 - (242 + 35)] = v31();
																																																break;
																																															end
																																														end
																																													end
																																													v285 = 1 + 0;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								if (v265 ~= (2 + 1)) then
																																								else
																																									if (v29(v267, 3, 3) ~= (1302 - (526 + 775))) then
																																									else
																																										v268[4] = v74[v268[4]];
																																									end
																																									v69[v218] = v268;
																																									break;
																																								end
																																								if ((1983 - (1819 + 162)) == v265) then
																																									local v287 = 1095 - (47 + 1048);
																																									while true do
																																										if ((0 - 0) == v287) then
																																											if (v29(v267, 1651 - (1227 + 423), 2 - 1) == (1 - 0)) then
																																												v268[2] = v74[v268[2]];
																																											end
																																											if (v29(v267, 2, 2 - 0) == 1) then
																																												v268[3] = v74[v268[2 + 1]];
																																											end
																																											v287 = 1;
																																										end
																																										if (v287 == 1) then
																																											v265 = 3;
																																											break;
																																										end
																																									end
																																								end
																																								if ((0 + 0) == v265) then
																																									local v288 = 0;
																																									while true do
																																										if (v288 ~= 1) then
																																										else
																																											v265 = 1 + 0;
																																											break;
																																										end
																																										if (v288 == 0) then
																																											v266 = v29(v221, 2, 3);
																																											v267 = v29(v221, 8 - 4, 2 + 4);
																																											v288 = 1;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																					end
																																					break;
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v219 ~= (0 + 0)) then
																													else
																														local v239 = 0;
																														local v240;
																														while true do
																															if (v239 == (0 - 0)) then
																																v240 = 0;
																																while true do
																																	if (v240 ~= 1) then
																																	else
																																		v219 = 1;
																																		break;
																																	end
																																	if (v240 == (518 - (289 + 229))) then
																																		v220 = 1636 - (1087 + 549);
																																		v221 = nil;
																																		v240 = 1;
																																	end
																																end
																																break;
																															end
																														end
																													end
																												end
																											end
																											for v222 = 1 + 0, v32() do
																												v70[v222 - (2 - 1)] = v37();
																											end
																											v135 = 1;
																										end
																										if (v135 ~= 1) then
																										else
																											local v215 = 0;
																											while true do
																												if (v215 ~= 0) then
																												else
																													for v241 = 683 - (238 + 444), v32() do
																														v71[v241] = v32();
																													end
																													return v72;
																												end
																											end
																										end
																										break;
																									end
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		v119 = 1;
																	end
																	if (v119 ~= 1) then
																	else
																		v102 = 1;
																		break;
																	end
																end
																break;
															end
														end
													end
													if (v102 == (1 + 0)) then
														if (v68 == 1) then
															local v124 = 0 + 0;
															local v125;
															local v126;
															while true do
																if (v124 == 1) then
																	while true do
																		if (v125 == 0) then
																			v126 = 0;
																			while true do
																				if (v126 ~= 1) then
																				else
																					local v136 = 0;
																					local v137;
																					while true do
																						if (v136 ~= 0) then
																						else
																							v137 = 0;
																							while true do
																								if (v137 ~= (0 + 0)) then
																								else
																									for v204 = 2 - 1, v73 do
																										local v205 = 0;
																										local v206;
																										local v207;
																										local v208;
																										local v209;
																										while true do
																											if (v205 == (1306 - (1026 + 280))) then
																												v206 = 0 + 0;
																												v207 = nil;
																												v205 = 1;
																											end
																											if (v205 == (1 + 0)) then
																												v208 = nil;
																												v209 = nil;
																												v205 = 2;
																											end
																											if (v205 ~= (1387 - (461 + 924))) then
																											else
																												while true do
																													if ((1 + 0) == v206) then
																														v209 = nil;
																														while true do
																															if (v207 == 0) then
																																local v256 = 0;
																																local v257;
																																while true do
																																	if (v256 == 0) then
																																		v257 = 0 - 0;
																																		while true do
																																			if (v257 ~= (0 - 0)) then
																																			else
																																				v208 = v30();
																																				v209 = nil;
																																				v257 = 1;
																																			end
																																			if (1 ~= v257) then
																																			else
																																				v207 = 1;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															if ((1 + 0) == v207) then
																																if (v208 == 1) then
																																	v209 = v30() ~= (0 - 0);
																																elseif (v208 == 2) then
																																	v209 = v33();
																																elseif (v208 == (1431 - (820 + 608))) then
																																	v209 = v34();
																																end
																																v74[v204] = v209;
																																break;
																															end
																														end
																														break;
																													end
																													if (v206 == 0) then
																														local v243 = 0 + 0;
																														while true do
																															if (v243 == 1) then
																																v206 = 1 - 0;
																																break;
																															end
																															if (v243 == 0) then
																																v207 = 0 + 0;
																																v208 = nil;
																																v243 = 1;
																															end
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																									v72[410 - (257 + 150)] = v30();
																									v137 = 1;
																								end
																								if (v137 ~= 1) then
																								else
																									v126 = 1352 - (892 + 458);
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (v126 == 2) then
																					v68 = 2;
																					break;
																				end
																				if (v126 ~= (0 + 0)) then
																				else
																					local v138 = 1868 - (1342 + 526);
																					local v139;
																					while true do
																						if (v138 == (1625 - (1338 + 287))) then
																							v139 = 979 - (225 + 754);
																							while true do
																								if (v139 == 0) then
																									local v160 = 0 + 0;
																									while true do
																										if (v160 ~= 0) then
																										else
																											v73 = v32();
																											v74 = {};
																											v160 = 1160 - (1154 + 5);
																										end
																										if (v160 == 1) then
																											v139 = 1 + 0;
																											break;
																										end
																									end
																								end
																								if ((1 + 0) ~= v139) then
																								else
																									v126 = 1402 - (1111 + 290);
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if (v124 ~= 0) then
																else
																	v125 = 0 - 0;
																	v126 = nil;
																	v124 = 1;
																end
															end
														end
														break;
													end
												end
											end
											break;
										end
										if (v67 == 0) then
											local v99 = 0 + 0;
											local v100;
											while true do
												if (v99 ~= 0) then
												else
													v100 = 0;
													while true do
														if (v100 == (2 - 1)) then
															v67 = 1;
															break;
														end
														if (v100 == 0) then
															local v127 = 1724 - (1080 + 644);
															while true do
																if (v127 == (1754 - (481 + 1272))) then
																	v100 = 1;
																	break;
																end
																if ((0 + 0) == v127) then
																	v68 = 0;
																	v69 = nil;
																	v127 = 1;
																end
															end
														end
													end
													break;
												end
											end
										end
										if (v67 == 1) then
											v70 = nil;
											v71 = nil;
											v67 = 5 - 3;
										end
										if ((1830 - (604 + 1224)) == v67) then
											local v101 = 0 - 0;
											while true do
												if (v101 == 1) then
													v67 = 3 + 0;
													break;
												end
												if (v101 ~= (1452 - (762 + 690))) then
												else
													v72 = nil;
													v73 = nil;
													v101 = 1 + 0;
												end
											end
										end
									end
									break;
								end
								if (v66 == (0 - 0)) then
									v67 = 0;
									v68 = nil;
									v66 = 1418 - (942 + 475);
								end
								if ((415 - (379 + 34)) == v66) then
									v71 = nil;
									v72 = nil;
									v66 = 3;
								end
								if (v66 ~= (1640 - (1242 + 395))) then
								else
									local v97 = 1249 - (1021 + 228);
									while true do
										if (0 ~= v97) then
										else
											v73 = nil;
											v74 = nil;
											v97 = 1;
										end
										if (v97 == (1 + 0)) then
											v66 = 4;
											break;
										end
									end
								end
								if (v66 == (2 - 1)) then
									local v98 = 0 - 0;
									while true do
										if (v98 ~= (789 - (48 + 740))) then
										else
											v66 = 2;
											break;
										end
										if (v98 ~= 0) then
										else
											v69 = nil;
											v70 = nil;
											v98 = 1136 - (326 + 809);
										end
									end
								end
							end
							break;
						end
						if (v65 == 3) then
							v72 = nil;
							v73 = nil;
							v65 = 6 - 2;
						end
						if ((2 + 0) ~= v65) then
						else
							v70 = nil;
							v71 = nil;
							v65 = 3;
						end
					end
				end
				local function v38(v44, v45, v46)
					local v75 = 0;
					local v76;
					local v77;
					local v78;
					while true do
						if (v75 == 1) then
							v78 = v44[3];
							return function(...)
								local v91 = 0;
								local v92;
								local v93;
								local v94;
								local v95;
								local v96;
								while true do
									if (v91 == 1) then
										v94 = {...};
										v95 = v13("#", ...) - 1;
										v91 = 2;
									end
									if (v91 == 2) then
										v96 = nil;
										function v96()
											local v103 = v76;
											local v104 = v77;
											local v105 = v78;
											local v106 = v36;
											local v107 = {};
											local v108 = {};
											local v109 = {};
											for v114 = 0 - 0, v95 do
												if ((1061 <= (4150 - (128 + 341 + 721))) and (v114 >= v105)) then
													v107[v114 - v105] = v94[v114 + (1660 - (1245 + 414))];
												else
													v109[v114] = v94[v114 + ((2 + 0) - 1)];
												end
											end
											local v110 = (v95 - v105) + 1;
											local v111;
											local v112;
											while true do
												local v115 = (42 - (6 + 36)) + 0;
												local v116;
												local v117;
												while true do
													if ((4187 <= (6256 - (865 + 581))) and (v115 == (1906 - (1553 + 353)))) then
														v116 = 0 + 0;
														v117 = nil;
														v115 = 1;
													end
													if (((1494 - (394 + 672)) == (23 + 405)) and ((1 + 0) == v115)) then
														while true do
															if ((v116 == 0) or (((9226 - 3813) - (1688 + 173)) > (1944 + 355 + 1783))) then
																v117 = 0 + 0;
																while true do
																	if ((v117 == (1 + 0)) or (((9356 - 5319) - 2924) == (4293 - (709 + 184)))) then
																		if ((v112 <= (195 - (73 + 110))) or (4875 <= (4591 - (623 + 1258)))) then
																			if ((v112 <= (3 + 2)) or ((4802 - (626 + 38)) < (1175 - ((1131 - (696 + 262)) + 884)))) then
																				if ((v112 <= (2 - 0)) or ((659 + 1440) == (3215 - (899 + 715)))) then
																					if (((4056 - 1557) < 2662) and (v112 <= ((38 + 7) - (10 + 35)))) then
																						v92 = v111[3];
																					elseif ((((6017 - (782 + 145)) - (876 + 785)) >= (7733 - 5144)) and (v112 > 1)) then
																						v109[v111[9 - 7]] = v109[v111[3]];
																					else
																						local v163 = 0 - 0;
																						local v164;
																						local v165;
																						local v166;
																						local v167;
																						while true do
																							if (((1685 - 1218) <= (6391 - (316 + 1123))) and (v163 == 1)) then
																								v166 = nil;
																								v167 = nil;
																								v163 = 1 + 1;
																							end
																							if ((v163 == (0 + 0)) or ((5140 - 1662) == ((15297 - 11276) - (569 + 595)))) then
																								local v216 = 0 + 0;
																								while true do
																									if ((v216 == 1) or ((4177 + 457) < (2870 - (2953 - (570 + 361))))) then
																										v163 = (1075 - (652 + 422)) + 0;
																										break;
																									end
																									if (((790 + 1611) > (4005 - 2037)) and ((0 + 0) == v216)) then
																										v164 = 0 - 0;
																										v165 = nil;
																										v216 = 1 - 0;
																									end
																								end
																							end
																							if ((2218 < (2657 - (21 + 242))) and (v163 == 2)) then
																								while true do
																									if ((v164 == (931 - (481 + 28 + 421))) or ((650 - 508) > (1784 - (3941 - 2579)))) then
																										v167 = v111[236 - (75 + 158)];
																										for v244 = 807 - (451 + 355), v167 do
																											v166[v244] = v109[v165 + v244];
																										end
																										break;
																									end
																									if (((5868 - (727 + 498)) < 4736) and (0 == v164)) then
																										local v228 = 0 - 0;
																										while true do
																											if (((1431 - 340) <= (330 + 995)) and (v228 == (1 + 0))) then
																												v164 = 1;
																												break;
																											end
																											if (((3341 - 2112) > (2889 - 1834)) and (v228 == (0 + 0))) then
																												local v248 = 80 - ((95 - 30) + 15);
																												while true do
																													if ((v248 == (2 - 1)) or (2819 > (4846 - (33 + 127)))) then
																														v228 = 328 - (27 + 300);
																														break;
																													end
																													if (((3806 - 2836) == (1485 - (433 + 82))) and (v248 == (1030 - (392 + 638)))) then
																														v165 = v111[7 - (2 + 3)];
																														v166 = v109[v165];
																														v248 = 1 + (645 - (434 + 211));
																													end
																												end
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																				elseif ((1072 <= (3741 - (893 + 242))) and (v112 <= (1 + 2))) then
																					local v144 = 0 - 0;
																					local v145;
																					while true do
																						if ((v144 == 0) or ((4441 - (107 + 1282)) >= 3281)) then
																							v145 = v111[1718 - (705 + 1011)];
																							v109[v145] = v109[v145](v14(v109, v145 + 1 + 0, v93));
																							break;
																						end
																					end
																				elseif ((((13275 - 7695) - (1315 + 211)) >= (4893 - 2683)) and (v112 == (1755 - ((4675 - 2939) + (40 - 25))))) then
																					v109[v111[472 - (22 + 448)]] = v109[v111[792 - (784 + (1204 - (49 + 1150)))]][v111[4]];
																				else
																					local v170 = 0 + 0;
																					local v171;
																					local v172;
																					while true do
																						if ((1852 <= ((4861 - (1088 + 541)) - (369 + 71 + 53))) and ((1 + 0) == v170)) then
																							while true do
																								if (((4976 - 2883) == (2924 - (171 + 660))) and (v171 == (0 - 0))) then
																									v172 = v111[2];
																									v109[v172](v14(v109, v172 + (1 - 0), v111[1316 - (552 + 761)]));
																									break;
																								end
																							end
																							break;
																						end
																						if (((1655 - 601) > (69 + 292)) and (v170 == (0 + 0))) then
																							v171 = 1182 - (615 + 567);
																							v172 = nil;
																							v170 = 1;
																						end
																					end
																				end
																			elseif ((v112 <= 8) or ((9728 - 4771) <= (2708 + 583))) then
																				if ((v112 <= (9 - 3)) or ((5919 - 3612) >= (2412 + 656))) then
																					for v153 = v111[1 + 1], v111[3] do
																						v109[v153] = nil;
																					end
																				elseif ((v112 == (16 - 9)) or (3627 < 3321)) then
																					local v173 = 492 - (19 + 473);
																					local v174;
																					local v175;
																					local v176;
																					while true do
																						if ((v173 == (0 - 0)) or (2517 == 474)) then
																							local v217 = 0 - 0;
																							while true do
																								if (((25 + 10) <= (3265 - ((1192 - (136 + 1032)) + 373 + 49))) and (v217 == (420 - (112 + 308)))) then
																									v174 = 0 - 0;
																									v175 = nil;
																									v217 = 1242 - (670 + 571);
																								end
																								if ((v217 == (925 - (918 + 6))) or (3698 == ((5046 + 364) - (467 + 97)))) then
																									v173 = 1 - 0;
																									break;
																								end
																							end
																						end
																						if ((v173 == 1) or ((1191 - (432 + 461)) > (1346 - 552))) then
																							v176 = nil;
																							while true do
																								if (((113 + 385) == (1391 - (515 + 378))) and (v174 == (3 - 2))) then
																									v109[v175 + 1 + (1004 - (486 + 518))] = v176;
																									v109[v175] = v176[v111[6 - 2]];
																									break;
																								end
																								if ((v174 == 0) or (3377 < (1115 + 721))) then
																									local v233 = 0 - (1839 - (576 + 1263));
																									local v234;
																									while true do
																										if (((4630 - (20 + 390)) == (3324 + 896)) and (v233 == (0 - 0))) then
																											v234 = 1826 - (496 + 1330);
																											while true do
																												if (((1689 - (1061 + 628)) == v234) or ((2712 - 795) >= (3810 - (174 + 704 + 999)))) then
																													local v271 = 0 - 0;
																													while true do
																														if (((567 + 3223) > (2424 - (502 + 77))) and (v271 == 1)) then
																															v234 = 1 - 0;
																															break;
																														end
																														if ((v271 == (0 - 0)) or ((542 + 2458) <= (185 + 1865))) then
																															v175 = v111[1418 - (946 + 470)];
																															v176 = v109[v111[8 - 5]];
																															v271 = 2 - 1;
																														end
																													end
																												end
																												if ((v234 == (2 - 1)) or ((1501 - (450 + 1008)) == (2763 - (181 + 599)))) then
																													v174 = 1 - 0;
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				else
																					local v177 = 0 + 0;
																					local v178;
																					local v179;
																					local v180;
																					while true do
																						if ((v177 == (0 - 0)) or (663 >= (1875 - (501 + 640)))) then
																							v178 = 1562 - ((1477 - 286) + 351 + 20);
																							v179 = nil;
																							v177 = 3 - 2;
																						end
																						if (((14509 - 9810) >= (3641 - (31 + 22))) and (v177 == ((3592 - 1814) - (252 + 1525)))) then
																							v180 = nil;
																							while true do
																								if (((685 + 1641) == 2326) and (v178 == 1)) then
																									while true do
																										if ((((1378 + 604) - (2311 - (650 + 390))) >= (1678 - (470 + 1092))) and (v179 == (554 - (362 + 192)))) then
																											v180 = v111[2];
																											v109[v180](v109[v180 + 1 + 0]);
																											break;
																										end
																									end
																									break;
																								end
																								if (((3492 - (3936 - 2656)) > (5133 - 3169)) and (v178 == (911 - (498 + 413)))) then
																									v179 = 0 + 0;
																									v180 = nil;
																									v178 = 1;
																								end
																							end
																							break;
																						end
																					end
																				end
																			elseif ((v112 <= (1025 - (514 + 501))) or ((996 - 566) >= 1568)) then
																				if (((6711 - 3185) <= (4320 - (260 + 99))) and (v112 == (8 + 1))) then
																					v109[v111[2]] = v111[8 - (14 - 9)] ~= (0 + (491 - (99 + 392)));
																				else
																					local v182 = 0 - 0;
																					local v183;
																					local v184;
																					while true do
																						if (((86 + 1) == (744 - (589 + 68))) and (v182 == (1 + 0))) then
																							while true do
																								if ((v183 == (0 - 0)) or ((1626 - 983) >= (4759 - (466 + 112)))) then
																									v184 = v111[(776 - (250 + 74)) - (98 + 352)];
																									v109[v184] = v109[v184](v14(v109, v184 + (278 - ((624 - 372) + (528 - (310 + 193)))), v111[5 - 2]));
																									break;
																								end
																							end
																							break;
																						end
																						if (((7088 - 3555) <= (5738 - (1102 + 513))) and (v182 == (0 + 0))) then
																							v183 = (0 - 0) + 0 + 0;
																							v184 = nil;
																							v182 = 422 - (289 + 90 + 42);
																						end
																					end
																				end
																			elseif (((990 - (76 + 205 + 323)) > ((49 - 32) + 57)) and (v112 > (3 + 8))) then
																				v109[v111[2 + 0]][v111[1 + 2 + 0]] = v109[v111[17 - 13]];
																			else
																				do
																					return;
																				end
																			end
																		elseif ((v112 <= 18) or (2106 > (3243 + 1128))) then
																			if ((v112 <= (1833 - (621 + (3200 - 2003)))) or ((244 - (121 - 56)) > 3775)) then
																				if (((2115 - (1248 + 499)) < (1559 - 487)) and (v112 <= 13)) then
																					local v146 = 214 - (24 + 190);
																					local v147;
																					local v148;
																					while true do
																						if ((3008 >= (171 + 845)) and (v146 == (1024 - (354 + 670)))) then
																							v147 = 0 + 0;
																							v148 = nil;
																							v146 = 1 + (0 - 0);
																						end
																						if ((v146 == (641 - (305 + (1440 - (582 + 523))))) or (((198 + 976) - (16 + 999)) > 4777)) then
																							while true do
																								if ((v147 == (0 + 0)) or ((3326 - 2288) >= (1412 + 509))) then
																									v148 = v111[920 - (92 + 826)];
																									v109[v148] = v109[v148]();
																									break;
																								end
																							end
																							break;
																						end
																					end
																				elseif ((v112 == (4 + 10)) or ((4541 - ((89 - 48) + 218)) == (1330 + 2425))) then
																					v109[v111[(5 - 3) + 0]] = v111[4 - (120 - (39 + 80))];
																				elseif (v109[v111[2]] or ((5152 - (548 + 895)) <= 1893)) then
																					v92 = v92 + (3 - 2);
																				else
																					v92 = v111[420 - (202 + 215)];
																				end
																			elseif ((3680 > (15997 - 12356)) and (v112 <= (34 - 18))) then
																				v109[v111[2]] = v46[v111[(8 - 5) + (369 - (301 + 68))]];
																			elseif ((v112 == (1531 - (232 + 1282))) or ((2576 - (1437 + 132)) >= (4003 - 1776))) then
																				if ((v111[5 - 3] == v109[v111[2 + 2]]) or ((4426 - ((521 - (255 + 156)) + 67)) == (4267 - (536 + 562)))) then
																					v92 = v92 + 1;
																				else
																					v92 = v111[1599 - (1008 + 588)];
																				end
																			elseif ((v109[v111[1 + 1 + 0]] == v111[7 - (957 - (931 + 23))]) or (2276 > (2989 - ((1112 - 872) + 424)))) then
																				v92 = v92 + ((1797 - 887) - (140 + 769));
																			else
																				v92 = v111[1080 - (278 + 799)];
																			end
																		elseif (((1250 - (674 + 457)) < (1238 + 1503)) and (v112 <= (36 - (6 + 9)))) then
																			if ((v112 <= (65 - 46)) or (2728 <= 172)) then
																				v46[v111[7 - 4]] = v109[v111[79 - (40 + 37)]];
																			elseif ((v112 > (37 - 17)) or ((3972 - 2392) < (281 + 16))) then
																				local v189 = 0 - (294 - (245 + 49));
																				local v190;
																				local v191;
																				local v192;
																				local v193;
																				local v194;
																				local v195;
																				while true do
																					if ((v189 == 0) or (1679 < (2862 - ((1072 - 599) + 925)))) then
																						v190 = 0;
																						v191 = nil;
																						v189 = 1 - 0;
																					end
																					if ((v189 == (728 - (170 + 555))) or ((2001 - (142 + 123)) > (15991 - 12730))) then
																						while true do
																							if (((2535 - (746 + 723)) <= (12354 - 7787)) and ((977 - (78 + 897)) == v190)) then
																								v195 = nil;
																								while true do
																									if (((0 - 0) == v191) or ((8735 - 5288) >= ((4904 - (92 + 932)) - (89 + 183)))) then
																										local v250 = 0;
																										local v251;
																										while true do
																											if (((5258 - (917 + 370)) >= 1616) and (v250 == ((2360 - 1629) - ((1162 - 798) + 367)))) then
																												v251 = 0;
																												while true do
																													if (((0 - 0) == v251) or ((14288 - 10823) < (6621 - 4947))) then
																														local v274 = 0 + 0;
																														while true do
																															if ((v274 == 1) or ((3782 - 1565) >= (4893 - (338 + 304)))) then
																																v251 = 3 - 2;
																																break;
																															end
																															if (((0 - 0) == v274) or ((2142 - (50 + 106)) <= 1405)) then
																																v192 = v111[1 + 1];
																																v193, v194 = v106(v109[v192](v14(v109, v192 + (2 - 1), v111[48 - (33 + 12)])));
																																v274 = 1 - 0;
																															end
																														end
																													end
																													if ((4162 > 723) and (v251 == 1)) then
																														v191 = 1153 - (330 + 822);
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									if ((347 < ((4455 - (1028 + 834)) + 809)) and (v191 == (1 + 0))) then
																										local v252 = 210 - (170 + 3 + 37);
																										local v253;
																										while true do
																											if ((v252 == (0 - 0)) or ((2933 - (906 + (1351 - (961 + 355)))) < (2645 - (69 + (2888 - 2098))))) then
																												v253 = (208 + 266) - (103 + 371);
																												while true do
																													if (((2405 - (568 + 97)) < ((695 - 501) + 3582)) and (v253 == (0 - 0))) then
																														local v275 = (1238 - (207 + 753)) - (77 + 201);
																														while true do
																															if ((v275 == (478 - (32 + 446))) or (1684 > (1634 + 1653))) then
																																v93 = (v194 + v192) - 1;
																																v195 = 0 + 0 + 0;
																																v275 = 1;
																															end
																															if (((13598 - 8980) > ((1 + 0) - 0)) and (v275 == 1)) then
																																v253 = 1 + 0;
																																break;
																															end
																														end
																													end
																													if ((4787 > (4251 - (1104 + 149))) and (v253 == (1664 - ((894 - 477) + 1246)))) then
																														v191 = 2;
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									if ((v191 == (2 + 0)) or ((774 - (40 + 115)) == 1378)) then
																										for v259 = v192, v93 do
																											local v260 = 0 - 0;
																											local v261;
																											while true do
																												if (((3775 - (279 + (1211 - (323 + 302)))) == (2524 + 386)) and (v260 == 0)) then
																													v261 = 1602 - (707 + 895);
																													while true do
																														if ((v261 == ((0 - 0) + 0)) or ((1898 - (1222 + 3)) >= (191 + (4000 - (5 + 435))))) then
																															v195 = v195 + ((3 - 2) - 0);
																															v109[v259] = v193[v195];
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if ((v190 == (2 - 1)) or ((3503 - 1276) <= 1657)) then
																								v193 = nil;
																								v194 = nil;
																								v190 = 4 - 2;
																							end
																							if ((v190 == (0 + 0 + 0)) or (4057 == 3199)) then
																								local v237 = 357 - (77 + 99 + (465 - (21 + 263)));
																								while true do
																									if ((v237 == (1174 - (380 + 94 + 700))) or (2687 >= (80 + 3994))) then
																										v191 = 0 - 0;
																										v192 = nil;
																										v237 = 1683 - (1156 + (2459 - (137 + 1796)));
																									end
																									if ((4031 <= (8297 - 3837)) and (v237 == 1)) then
																										v190 = 1;
																										break;
																									end
																								end
																							end
																						end
																						break;
																					end
																					if (((3654 - (560 + 1038)) <= (4592 - (298 + (2236 - 1267)))) and (v189 == (1343 - (132 + 129 + (2401 - (582 + 738)))))) then
																						v192 = nil;
																						v193 = nil;
																						v189 = 1973 - (1012 + 959);
																					end
																					if ((v189 == (2 + 0)) or ((191 + 2388) >= (8923 - 6189))) then
																						v194 = nil;
																						v195 = nil;
																						v189 = 3;
																					end
																				end
																			else
																				v109[v111[2 + 0]] = {};
																			end
																		elseif (((340 + 679) <= (3702 - 1346)) and (v112 <= (952 - (729 + 200)))) then
																			if (((1584 - (687 + 288)) == (1270 - 661)) and (v112 > 22)) then
																				local v197 = 1439 - (360 + 1079);
																				local v198;
																				local v199;
																				local v200;
																				while true do
																					if (((3539 + 1043) > (1437 + 946)) and ((1 + 0) == v197)) then
																						v200 = nil;
																						while true do
																							if ((((1962 - (452 + 224)) + 465) >= ((2273 - 1610) + 328)) and (v198 == (2 - 1))) then
																								for v247 = v199 + 1 + 0, v111[4 - 1] do
																									v8(v200, v109[v247]);
																								end
																								break;
																							end
																							if (((0 - 0) == v198) or ((1385 - (853 - (22 + 148))) >= (647 + 2627))) then
																								local v238 = 0;
																								while true do
																									if ((v238 == 1) or ((1893 - (1126 + 471)) >= (2051 - (812 + 22 + 134)))) then
																										v198 = 3 - 2;
																										break;
																									end
																									if (((606 + 2910) >= (461 + 1375)) and (v238 == (0 - 0))) then
																										v199 = v111[1 + 1];
																										v200 = v109[v199];
																										v238 = 1793 - (956 + 836);
																									end
																								end
																							end
																						end
																						break;
																					end
																					if ((v197 == (792 - (501 + 291))) or ((4 + (1641 - 1208)) <= 86)) then
																						v198 = 0;
																						v199 = nil;
																						v197 = 1846 - (1761 + 84);
																					end
																				end
																			else
																				v109[v111[1999 - (353 + 1644)]] = v38(v104[v111[(3 + 6) - (1417 - (729 + 682))]], nil, v46);
																			end
																		elseif ((v112 == (1708 - (526 + 1158))) or (3374 < ((2467 - (108 + 374)) + 411))) then
																			v109[v111[150 - (147 + 1)]]();
																		else
																			v109[v111[1 + 1]][v111[147 - (113 + 31)]] = v111[4];
																		end
																		v92 = v92 + ((313 - (259 + 51)) - 2);
																		break;
																	end
																	if (((2807 - 1358) < 2954) and (v117 == (0 - 0))) then
																		local v128 = 0;
																		local v129;
																		while true do
																			if (((2925 + 737) > (864 + 2001)) and (v128 == ((734 - 458) - (124 + 152)))) then
																				v129 = 121 - (12 + 109);
																				while true do
																					if ((v129 == (50 - (15 + 35))) or ((11790 - 6813) <= 3342)) then
																						v111 = v103[v92];
																						v112 = v111[1342 - (1086 + 255)];
																						v129 = 1;
																					end
																					if ((v129 == (1 - 0)) or (3419 == (14 + 2016))) then
																						v117 = 1 + 0;
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																end
																break;
															end
														end
														break;
													end
												end
											end
										end
										v91 = 3;
									end
									if (v91 == 0) then
										v92 = 1;
										v93 = -1;
										v91 = 1;
									end
									if (3 == v91) then
										A, B = v36(v12(v96));
										if not A[1] then
											local v113 = v44[4][v92] or "?";
											error("Script error at [" .. v113 .. "]:" .. A[2]);
										else
											return v14(A, 2, B);
										end
										break;
									end
								end
							end;
						end
						if (v75 == 0) then
							v76 = v44[1];
							v77 = v44[2];
							v75 = 1;
						end
					end
				end
				return v38(v37(), {}, v26)(...);
			end
			vv10(), ...);
			break;
		end
		if (2 == v0) then
			v7 = table.concat;
			v8 = table.insert;
			v9 = math.ldexp;
			v0 = 3;
		end
		if (v0 == 3) then
			v10 = getfenv or function()
				return _ENV;
			end;
			v11 = setmetatable;
			v12 = pcall;
			v0 = 4;
		end
	end
end
