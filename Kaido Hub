--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0 = 0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	while true do
		if (v0 == 1) then
			v4 = string.sub;
			v5 = string.gsub;
			v6 = string.rep;
			v0 = 2;
		end
		if (v0 == 5) then
			v16 = nil;
			function v16(v25, v26, ...)
				local v27 = 1;
				local v28;
				v25 = v5(v4(v25, 5), "..", function(v39)
					if (v2(v39, 2) == 79) then
						local v76 = 0;
						while true do
							if (v76 == 0) then
								v28 = v1(v4(v39, 1, 1));
								return "";
							end
						end
					else
						local v77 = 0;
						local v78;
						while true do
							if (v77 == 0) then
								v78 = v3(v1(v39, 16));
								if v28 then
									local v90 = v6(v78, v28);
									v28 = nil;
									return v90;
								else
									return v78;
								end
								break;
							end
						end
					end
				end);
				local function v29(v40, v41, v42)
					if v42 then
						local v79 = 1513 - (474 + 1039);
						local v80;
						while true do
							if (v79 == (0 + (928 - (861 + 67)))) then
								v80 = (v40 / ((5 - 3) ^ (v41 - (1 + 0)))) % ((1 + 1 + 0) ^ (((v42 - (565 - (272 + 292))) - (v41 - (189 - (103 + 85)))) + 1 + 0));
								return v80 - (v80 % (1 + 0));
							end
						end
					else
						local v81 = (4 - 2) ^ (v41 - ((1 + 0) - 0));
						return (((v40 % (v81 + v81)) >= v81) and (840 - (542 + 297))) or (0 + 0);
					end
				end
				local function v30()
					local v47 = v2(v25, v27, v27);
					v27 = v27 + 1;
					return v47;
				end
				local function v31()
					local v48, v49 = v2(v25, v27, v27 + 1 + 1);
					v27 = v27 + (352 - (109 + 241));
					return (v49 * (418 - 162)) + v48;
				end
				local function v32()
					local v50, v51, v52, v53 = v2(v25, v27, v27 + (1610 - (1375 + 232)));
					v27 = v27 + (15 - 11);
					return (v53 * (45316485 - 28539269)) + (v52 * (67163 - ((508 - 171) + 1290))) + (v51 * (870 - 614)) + v50;
				end
				local function v33()
					local v54 = 0 - 0;
					local v55;
					local v56;
					local v57;
					local v58;
					local v59;
					local v60;
					while true do
						if ((1 + 0) == v54) then
							v57 = 3 - (5 - 3);
							v58 = (v29(v56, 1 + 0, 20) * ((2 + (1199 - (764 + 435))) ^ (136 - 104))) + v55;
							v54 = 1472 - (708 + 762);
						end
						if (v54 == (2 + 1)) then
							if (v59 == (0 - 0)) then
								if (v58 == (0 + 0 + 0)) then
									return v60 * (0 + 0);
								else
									v59 = 1;
									v57 = 0 + 0 + 0;
								end
							elseif (v59 == (3640 - (985 + 608))) then
								return ((v58 == (0 - (0 + 0))) and (v60 * ((1 + 0) / 0))) or (v60 * NaN);
							end
							return v9(v60, v59 - (931 + 92)) * (v57 + (v58 / ((2 + 0) ^ (45 + 4 + 3))));
						end
						if (v54 == (1 + 1)) then
							v59 = v29(v56, (1405 - (291 + 1095)) + 2, 641 - (296 + 314));
							v60 = ((v29(v56, (86 - 41) - (1780 - (119 + 1648))) == (1335 - (250 + 1084))) and -(304 - (245 + 58))) or (1 - 0);
							v54 = 952 - (730 + (503 - 284));
						end
						if ((0 - (1161 - (841 + 320))) == v54) then
							v55 = v32();
							v56 = v32();
							v54 = 1;
						end
					end
				end
				local function v34(v43)
					local v61;
					if not v43 then
						v43 = v32();
						if (v43 == (1304 - (1202 + 102))) then
							return "";
						end
					end
					v61 = v4(v25, v27, (v27 + v43) - 1);
					v27 = v27 + v43;
					local v62 = {};
					for v74 = 2 - 1, #v61 do
						v62[v74] = v3(v2(v4(v61, v74, v74)));
					end
					return v7(v62);
				end
				local v35 = v32;
				local function v36(...)
					return {...}, v13("#", ...);
				end
				local function v37()
					local v63 = 0;
					local v64;
					local v65;
					local v66;
					local v67;
					local v68;
					local v69;
					local v70;
					while true do
						if (v63 == 1) then
							v66 = nil;
							v67 = nil;
							v63 = 2;
						end
						if (v63 == (1 + 1)) then
							v68 = nil;
							v69 = nil;
							v63 = 3;
						end
						if (v63 == 3) then
							v70 = nil;
							while true do
								local v88 = 0 - 0;
								local v89;
								while true do
									if (v88 == (1935 - (608 + 1327))) then
										v89 = 0;
										while true do
											if (v89 == 0) then
												local v106 = 0;
												while true do
													if (v106 ~= 0) then
													else
														if (v64 == (1584 - (1189 + 392))) then
															for v116 = 2 - 1, v32() do
																v66[v116 - 1] = v37();
															end
															for v118 = 1, v32() do
																v67[v118] = v32();
															end
															return v68;
														end
														if (v64 == 0) then
															local v115 = 0 + 0;
															while true do
																if (v115 == 0) then
																	v65 = {};
																	v66 = {};
																	v115 = 1 - 0;
																end
																if (v115 == (1 + 0)) then
																	v67 = {};
																	v64 = 1 - 0;
																	break;
																end
															end
														end
														v106 = 1;
													end
													if (v106 == (3 - 2)) then
														v89 = 1;
														break;
													end
												end
											end
											if (v89 == (352 - (312 + 39))) then
												if (v64 == (4 - 2)) then
													local v111 = 0 - 0;
													local v112;
													while true do
														if (v111 ~= (0 - 0)) then
														else
															v112 = 0;
															while true do
																if (v112 == (0 + 0)) then
																	for v123 = 4 - 3, v69 do
																		local v124 = 0;
																		local v125;
																		local v126;
																		local v127;
																		local v128;
																		local v129;
																		while true do
																			if ((0 + 0) == v124) then
																				v125 = 0;
																				v126 = nil;
																				v124 = 1;
																			end
																			if (v124 == 1) then
																				v127 = nil;
																				v128 = nil;
																				v124 = 2 - 0;
																			end
																			if (v124 ~= 2) then
																			else
																				v129 = nil;
																				while true do
																					if (v125 ~= (1323 - (204 + 1118))) then
																					else
																						local v182 = 1232 - (1045 + 187);
																						while true do
																							if ((1011 - (224 + 787)) == v182) then
																								v128 = nil;
																								v129 = nil;
																								v182 = 1;
																							end
																							if (v182 == 1) then
																								v125 = 2;
																								break;
																							end
																						end
																					end
																					if (v125 ~= 2) then
																					else
																						while true do
																							if (v126 == (0 + 0)) then
																								local v205 = 0;
																								while true do
																									if (v205 ~= (1182 - (249 + 933))) then
																									else
																										v127 = 0 - 0;
																										v128 = nil;
																										v205 = 1;
																									end
																									if (v205 ~= (1 - 0)) then
																									else
																										v126 = 1;
																										break;
																									end
																								end
																							end
																							if (v126 ~= (2 - 1)) then
																							else
																								v129 = nil;
																								while true do
																									if (v127 == (0 - 0)) then
																										local v224 = 0;
																										local v225;
																										while true do
																											if (v224 == 0) then
																												v225 = 1689 - (132 + 1557);
																												while true do
																													if (0 == v225) then
																														local v237 = 1349 - (1250 + 99);
																														local v238;
																														while true do
																															if (v237 ~= (0 - 0)) then
																															else
																																v238 = 0;
																																while true do
																																	if (v238 == (140 - (117 + 23))) then
																																		local v244 = 0;
																																		while true do
																																			if (v244 == 1) then
																																				v238 = 182 - (84 + 97);
																																				break;
																																			end
																																			if (v244 == (0 - 0)) then
																																				v128 = v30();
																																				v129 = nil;
																																				v244 = 1790 - (277 + 1512);
																																			end
																																		end
																																	end
																																	if (v238 ~= 1) then
																																	else
																																		v225 = 1;
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													end
																													if (1 ~= v225) then
																													else
																														v127 = 4 - 3;
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									if (v127 == 1) then
																										if (v128 == 1) then
																											v129 = v30() ~= (0 - 0);
																										elseif (v128 == (5 - 3)) then
																											v129 = v33();
																										elseif (v128 == 3) then
																											v129 = v34();
																										end
																										v70[v123] = v129;
																										break;
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v125 ~= 0) then
																					else
																						local v183 = 0;
																						while true do
																							if (v183 ~= 1) then
																							else
																								v125 = 1;
																								break;
																							end
																							if (v183 == 0) then
																								v126 = 0;
																								v127 = nil;
																								v183 = 1;
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	end
																	v68[3] = v30();
																	v112 = 1 + 0;
																end
																if (v112 == (2 - 1)) then
																	for v130 = 1 + 0, v32() do
																		local v131 = 0;
																		local v132;
																		local v133;
																		while true do
																			if (v131 == (538 - (534 + 3))) then
																				while true do
																					if (v132 == 0) then
																						v133 = v30();
																						if (v29(v133, 1 + 0, 1) == 0) then
																							local v195 = 0;
																							local v196;
																							local v197;
																							local v198;
																							local v199;
																							while true do
																								if (v195 ~= (9 - 7)) then
																								else
																									while true do
																										if (v196 == (11 - 8)) then
																											if (v29(v198, 3, 8 - 5) ~= (1 - 0)) then
																											else
																												v199[446 - (387 + 55)] = v70[v199[13 - 9]];
																											end
																											v65[v130] = v199;
																											break;
																										end
																										if ((1 + 0) ~= v196) then
																										else
																											local v230 = 0;
																											local v231;
																											while true do
																												if (v230 ~= 0) then
																												else
																													v231 = 0;
																													while true do
																														if (v231 == 0) then
																															local v239 = 0;
																															while true do
																																if ((0 + 0) == v239) then
																																	v199 = {v31(),v31(),nil,nil};
																																	if (v197 == (305 - (215 + 90))) then
																																		local v245 = 0;
																																		local v246;
																																		local v247;
																																		while true do
																																			if (v245 ~= (1245 - (710 + 534))) then
																																			else
																																				while true do
																																					if (v246 == (0 + 0)) then
																																						v247 = 0 + 0;
																																						while true do
																																							if (0 ~= v247) then
																																							else
																																								v199[3] = v31();
																																								v199[4 + 0] = v31();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v245 == (0 - 0)) then
																																				v246 = 0 - 0;
																																				v247 = nil;
																																				v245 = 1;
																																			end
																																		end
																																	elseif (v197 == 1) then
																																		v199[3] = v32();
																																	elseif (v197 == 2) then
																																		v199[8 - 5] = v32() - (2 ^ 16);
																																	elseif (v197 == 3) then
																																		local v250 = 0 - 0;
																																		local v251;
																																		local v252;
																																		local v253;
																																		while true do
																																			if (v250 == (2 - 1)) then
																																				v253 = nil;
																																				while true do
																																					if (v251 == (949 - (809 + 140))) then
																																						v252 = 0;
																																						v253 = nil;
																																						v251 = 1;
																																					end
																																					if ((167 - (39 + 127)) == v251) then
																																						while true do
																																							if (0 ~= v252) then
																																							else
																																								v253 = 0 + 0;
																																								while true do
																																									if (v253 == (0 + 0)) then
																																										v199[3] = v32() - (2 ^ (1199 - (1137 + 46)));
																																										v199[4] = v31();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v250 ~= (0 + 0)) then
																																			else
																																				v251 = 0;
																																				v252 = nil;
																																				v250 = 552 - (119 + 432);
																																			end
																																		end
																																	end
																																	v239 = 1 + 0;
																																end
																																if (v239 == 1) then
																																	v231 = 1;
																																	break;
																																end
																															end
																														end
																														if (v231 ~= 1) then
																														else
																															v196 = 2;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v196 == (0 + 0)) then
																											local v232 = 0 + 0;
																											while true do
																												if (v232 == 1) then
																													v196 = 2 - 1;
																													break;
																												end
																												if (v232 == (0 - 0)) then
																													v197 = v29(v133, 8 - 6, 886 - (700 + 183));
																													v198 = v29(v133, 8 - 4, 6);
																													v232 = 1;
																												end
																											end
																										end
																										if (v196 == 2) then
																											local v233 = 0;
																											while true do
																												if (v233 ~= 0) then
																												else
																													local v236 = 0;
																													while true do
																														if (v236 == 0) then
																															if (v29(v198, 1, 1 + 0) == (1 + 0)) then
																																v199[7 - 5] = v70[v199[2]];
																															end
																															if (v29(v198, 1 + 1, 1690 - (1340 + 348)) == 1) then
																																v199[3 - 0] = v70[v199[6 - 3]];
																															end
																															v236 = 1;
																														end
																														if (v236 ~= (1438 - (393 + 1044))) then
																														else
																															v233 = 548 - (51 + 496);
																															break;
																														end
																													end
																												end
																												if (v233 == (1 - 0)) then
																													v196 = 3;
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																								if (v195 ~= (1973 - (740 + 1232))) then
																								else
																									v198 = nil;
																									v199 = nil;
																									v195 = 2;
																								end
																								if (v195 == (0 - 0)) then
																									v196 = 0;
																									v197 = nil;
																									v195 = 805 - (243 + 561);
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (0 == v131) then
																				v132 = 0;
																				v133 = nil;
																				v131 = 878 - (802 + 75);
																			end
																		end
																	end
																	v64 = 3;
																	break;
																end
															end
															break;
														end
													end
												end
												if (v64 ~= (1 + 0)) then
												else
													local v113 = 0;
													while true do
														if (v113 ~= (1 - 0)) then
														else
															v70 = {};
															v64 = 2;
															break;
														end
														if (v113 == 0) then
															v68 = {v65,v66,nil,v67};
															v69 = v32();
															v113 = 1;
														end
													end
												end
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v63 == (0 + 0)) then
							v64 = 0 + 0;
							v65 = nil;
							v63 = 1;
						end
					end
				end
				local function v38(v44, v45, v46)
					local v71 = v44[1];
					local v72 = v44[2];
					local v73 = v44[3];
					return function(...)
						local v82 = 0;
						local v83;
						local v84;
						local v85;
						local v86;
						local v87;
						while true do
							if (v82 == 3) then
								A, B = v36(v12(v87));
								if not A[1] then
									local v91 = 0;
									local v92;
									while true do
										if (v91 == 0) then
											v92 = v44[4][v83] or "?";
											error("Script error at [" .. v92 .. "]:" .. A[2]);
											break;
										end
									end
								else
									return v14(A, 2, B);
								end
								break;
							end
							if (v82 == 2) then
								v87 = nil;
								function v87()
									local v93 = v71;
									local v94 = v72;
									local v95 = v73;
									local v96 = v36;
									local v97 = {};
									local v98 = {};
									local v99 = {};
									for v103 = 0 + 0, v86 do
										if ((v103 >= v95) or ((5236 - (389 + 333)) < (3422 - (27 + 493)))) then
											v97[v103 - v95] = v85[v103 + 1];
										else
											v99[v103] = v85[v103 + 1];
										end
									end
									local v100 = (v86 - v95) + 1;
									local v101;
									local v102;
									while true do
										local v104 = 0 - 0;
										local v105;
										while true do
											if ((v104 == 0) or (((3281 - (765 + 188)) - (523 + 95)) <= 1581)) then
												v105 = 0;
												while true do
													if ((v105 == (0 - 0)) or ((3047 - (276 + 408)) <= (496 - 275))) then
														local v114 = 0 + 0;
														while true do
															if (((1118 + 582) <= 1861) and (v114 == (0 + 0))) then
																v101 = v93[v83];
																v102 = v101[1 + 0];
																v114 = 557 - (508 + 48);
															end
															if ((v114 == (1 + 0)) or ((759 - (118 + 349)) >= (3953 - (171 + 2)))) then
																v105 = 1;
																break;
															end
														end
													end
													if ((((7731 - 1984) - (467 + 1512)) > (2570 - 1767)) and (v105 == (1 + 0))) then
														if ((v102 <= 12) or ((2075 - (539 + 257 + 404)) <= 718)) then
															if ((v102 <= (248 - (214 + (548 - (242 + 277))))) or (1057 >= (9096 - 4896))) then
																if ((v102 <= ((3 + 0) - 1)) or ((874 - 513) >= (9286 - 5303))) then
																	if (((980 + 1349) == (2731 - (392 + 1 + 9))) and (v102 <= (0 - (739 - (242 + 497))))) then
																		local v134 = 0 + 0;
																		local v135;
																		local v136;
																		while true do
																			if ((v134 == (0 - 0)) or (((8186 - (1569 + 129)) - 4024) <= (2325 - (970 + 33)))) then
																				local v184 = (255 - (39 + 216)) + 0;
																				while true do
																					if (((3978 - 1477) == ((2047 + 2809) - 2355)) and (v184 == (0 + 0))) then
																						v135 = v101[2 + 0];
																						v136 = v99[v135];
																						v184 = 1 + 0;
																					end
																					if (((13175 - 9124) == (10247 - 6196)) and (v184 == (407 - (25 + 381)))) then
																						v134 = (3 - 2) + 0;
																						break;
																					end
																				end
																			end
																			if ((v134 == (2 - 1)) or ((3790 - ((3620 - 1986) + 318)) >= (16678 - 12710))) then
																				for v192 = v135 + (1879 - (813 + (5109 - 4044))), v101[11 - 8] do
																					v8(v136, v99[v192]);
																				end
																				break;
																			end
																		end
																	elseif (((2797 + (637 - (305 + 327))) < (4965 - (716 + 53))) and (v102 == (590 - (522 + 48 + 19)))) then
																		v99[v101[1 + 1]] = v101[1042 - (255 + 784)];
																	else
																		local v152 = 0 - 0;
																		local v153;
																		local v154;
																		while true do
																			if (((8998 - 5786) < (4953 - (526 + 223))) and (v152 == ((3004 - 1615) - (385 + 1004)))) then
																				local v200 = 1386 - (238 + 1148);
																				while true do
																					if ((v200 == 1) or (((1342 + 1169) - (123 + 1100 + 237 + 4)) > (2005 - ((187 - 122) + 345)))) then
																						v152 = 1324 - (999 + 324);
																						break;
																					end
																					if (((7660 - 4106) >= (4230 - (3264 - (130 + 254)))) and (v200 == 0)) then
																						v153 = 1489 - (1070 + 419);
																						v154 = nil;
																						v200 = 1;
																					end
																				end
																			end
																			if ((1743 == (3301 - (748 + 810))) and (v152 == (1565 - (865 + 699)))) then
																				while true do
																					if (((5785 - (3754 - (239 + 1746))) > (3120 - 1951)) and (v153 == (0 - (0 + 0)))) then
																						v154 = v101[3 - 1];
																						v99[v154] = v99[v154]();
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																elseif ((v102 <= (1627 - (928 + 696))) or ((14070 - 9705) < 2725)) then
																	local v137 = 561 - (304 + 257);
																	local v138;
																	local v139;
																	local v140;
																	local v141;
																	local v142;
																	while true do
																		if (((7355 - 4094) == (3363 - (89 + 13))) and ((1352 - (721 + (1036 - 406))) == v137)) then
																			v140 = nil;
																			v141 = nil;
																			v137 = 5 - 3;
																		end
																		if ((v137 == (0 + 0)) or ((464 + 19) > (2019 + 352))) then
																			v138 = 0 - 0;
																			v139 = nil;
																			v137 = (3 - 2) + 0;
																		end
																		if (((1047 + 3331) >= (51 + 130)) and (v137 == (1227 - (522 + 703)))) then
																			v142 = nil;
																			while true do
																				if (((5173 - (266 + 1296)) > (1477 - (37 + 1295))) and (v138 == 0)) then
																					v139 = v101[2 + 0];
																					v140, v141 = v96(v99[v139](v14(v99, v139 + (1832 - (664 + 1167)), v101[(840 - (95 + 742)) + 0])));
																					v138 = 1 + 0 + 0;
																				end
																				if ((863 < 2536) and (v138 == (786 - ((860 - 485) + (949 - (209 + 330)))))) then
																					local v209 = 0 + 0;
																					while true do
																						if ((v209 == (2 - 1)) or ((4031 - 2247) == (1618 - 1135))) then
																							v138 = 2;
																							break;
																						end
																						if ((v209 == (0 + 0)) or ((3629 - (199 + 214)) < (6284 - 3570))) then
																							v84 = (v141 + v139) - (1 + 0);
																							v142 = 0 - 0;
																							v209 = 661 - (117 + 543);
																						end
																					end
																				end
																				if (((75 + 3) == (66 + 12)) and (v138 == 2)) then
																					for v215 = v139, v84 do
																						local v216 = (0 - 0) - 0;
																						while true do
																							if (((1819 + (1991 - 1468)) < (10969 - 8048)) and (v216 == ((0 - 0) + 0))) then
																								v142 = v142 + 1;
																								v99[v215] = v140[v142];
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																elseif ((v102 == (1851 - ((2806 - 2095) + 1136))) or (3571 <= (270 + 917))) then
																	v99[v101[2 - 0]] = {};
																else
																	do
																		return;
																	end
																end
															elseif ((v102 <= ((1673 - (1282 + 378)) - 5)) or ((3313 + 953) < (7822 - (7271 - (462 + 1331))))) then
																if ((v102 <= (721 - (464 + 251))) or (3034 == (5133 - ((2110 - 1188) + 126)))) then
																	local v143 = 0 + 0;
																	local v144;
																	local v145;
																	while true do
																		if ((v143 == 1) or ((8871 - 5599) > (14367 - 10266))) then
																			v99[v144 + 1 + 0] = v145;
																			v99[v144] = v145[v101[2 + 2]];
																			break;
																		end
																		if ((v143 == 0) or ((1209 + 2204) < (252 + 119))) then
																			local v188 = 0;
																			while true do
																				if (((1372 - (1369 + 3)) == v188) or ((2003 - 719) == 2045)) then
																					v144 = v101[649 - (257 + (700 - 310))];
																					v145 = v99[v101[755 - (729 + 23)]];
																					v188 = 1 + 0;
																				end
																				if ((v188 == 1) or ((1650 + 534) < (3 + (25 - 13)))) then
																					v143 = 1;
																					break;
																				end
																			end
																		end
																	end
																elseif (((5045 - 3567) <= 2417) and (v102 > 7)) then
																	if ((v101[697 - (85 + 610)] == v99[v101[1 + 3]]) or ((3772 + 194) < (1865 + 1223))) then
																		v83 = v83 + 1 + 0;
																	else
																		v83 = v101[3];
																	end
																else
																	v83 = v101[3 + 0];
																end
															elseif ((v102 <= (800 - (75 + 715))) or (((7671 - 5164) + 1180) > (934 + 3044))) then
																if (((4901 - (539 + 1407)) > ((2230 - (1152 + 409)) - (44 + 152))) and (v102 == (1400 - (941 + 450)))) then
																	local v157 = 0 - 0;
																	local v158;
																	local v159;
																	while true do
																		if ((v157 == (0 + 0)) or ((4193 - (242 + 1320)) == (2003 - (53 + 17 + 38)))) then
																			v158 = 0 + 0;
																			v159 = nil;
																			v157 = 2 - 1;
																		end
																		if (((22 + 2) <= (4438 - (32 + 1764))) and (v157 == (1 - 0))) then
																			while true do
																				if ((v158 == (0 + 0)) or ((3274 + 72) == (3583 - (119 + 85)))) then
																					v159 = v101[2];
																					v99[v159] = v99[v159](v14(v99, v159 + (314 - (87 + 226)), v101[1 + 2]));
																					break;
																				end
																			end
																			break;
																		end
																	end
																elseif (v99[v101[2]] or ((3220 - 870) == (5085 - 2541))) then
																	v83 = v83 + (912 - (433 + 478));
																else
																	v83 = v101[3 + 0];
																end
															elseif ((v102 > (9 + 2)) or ((2615 - 1380) > (4180 - 2880))) then
																local v160 = 0 - 0;
																local v161;
																while true do
																	if ((v160 == 0) or ((9211 - 5515) <= (4922 - (132 + 1369)))) then
																		v161 = v101[1 + 1];
																		v99[v161] = v99[v161](v14(v99, v161 + 1 + 0, v84));
																		break;
																	end
																end
															else
																v99[v101[2]][v101[3 - (0 - 0)]] = v101[1467 - (891 + 572)];
															end
														elseif (((4865 - 3139) < ((3730 - 1240) + 1189)) and (v102 <= 18)) then
															if ((v102 <= (5 + 10)) or ((996 + 2100) <= (2272 - 1531))) then
																if (((1019 + 1907) == (12488 - 9562)) and (v102 <= (2007 - (1262 + 732)))) then
																	if ((v99[v101[2]] == v101[279 - ((2185 - (292 + 1693)) + 75)]) or ((1990 + 1442) <= (216 + 564))) then
																		v83 = v83 + 1 + 0;
																	else
																		v83 = v101[3];
																	end
																elseif ((((12167 - 8490) - (346 + 400)) == 2931) and (v102 > 14)) then
																	v99[v101[(556 + 170) - (583 + 141)]] = v99[v101[1187 - (435 + 749)]][v101[4]];
																else
																	for v189 = v101[1946 - (76 + 1868)], v101[5 - (770 - (548 + 220))] do
																		v99[v189] = nil;
																	end
																end
															elseif ((((3582 - (1057 + 794)) - 968) <= (1181 + 1704)) and (v102 <= (63 - 47))) then
																v99[v101[2 + 0]][v101[285 - (257 + 25)]] = v99[v101[4]];
															elseif ((v102 > (1160 - (1120 + 23))) or (3423 == 1945)) then
																v99[v101[2]]();
															else
																local v167 = 978 - (868 + 110);
																local v168;
																local v169;
																while true do
																	if ((1573 <= (1952 + 2651)) and (v167 == (0 + 0))) then
																		v168 = 0 + 0;
																		v169 = nil;
																		v167 = 1 + 0;
																	end
																	if ((v167 == 1) or ((11721 - 7973) <= 2709)) then
																		while true do
																			if (((2305 + 344) > 810) and (v168 == (0 + 0))) then
																				v169 = v101[2];
																				v99[v169](v99[v169 + (271 - (103 + 167))]);
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v102 <= ((35 + 11) - 25)) or (4680 <= (7116 - (14070 - 10529)))) then
															if ((v102 <= 19) or ((2398 + 296) <= (8991 - 6424))) then
																local v148 = 1526 - (334 + 1192);
																local v149;
																while true do
																	if (((6057 - (1020 + 479)) == ((3661 + 1062) - (83 + 82))) and (v148 == (0 + 0))) then
																		v149 = v101[2];
																		v99[v149](v14(v99, v149 + 1 + 0, v101[4 - 1]));
																		break;
																	end
																end
															elseif (((1289 - (177 + 72)) <= (3629 + 611)) and (v102 == (57 - 37))) then
																v46[v101[3]] = v99[v101[4 - 2]];
															else
																v99[v101[2 + 0]] = v101[7 - 4] ~= 0;
															end
														elseif ((v102 <= 23) or ((867 + (1703 - (291 + 465))) >= (7414 - 4130))) then
															if ((v102 == ((1102 - (604 + 491)) + 15)) or ((1510 - (107 + 26)) < (404 + 160))) then
																v99[v101[1087 - (43 + 1042)]] = v99[v101[1160 - (866 + 291)]];
															else
																v99[v101[2]] = v46[v101[3]];
															end
														elseif ((v102 == (1388 - (1114 + 250))) or ((2007 + 1560 + 1356) < (3 + 1))) then
															v99[v101[4 - 2]] = v38(v94[v101[216 - (191 + 22)]], nil, v46);
														else
															local v178 = 0;
															local v179;
															local v180;
															local v181;
															while true do
																if ((1688 < ((1547 - 860) + 3201)) and (v178 == (1 + 0))) then
																	v181 = v101[3];
																	for v212 = 3 - 2, v181 do
																		v180[v212] = v99[v179 + v212];
																	end
																	break;
																end
																if ((829 == (1484 - 655)) and (v178 == (0 + 0))) then
																	local v204 = 0 - (0 - 0);
																	while true do
																		if (((3131 + 870) < (22555 - 17775)) and (v204 == 0)) then
																			v179 = v101[2];
																			v180 = v99[v179];
																			v204 = 395 - (105 + 67 + 222);
																		end
																		if (((5098 - 2237) > ((673 - (270 + 6)) - 129)) and (v204 == ((1 - 0) + 0))) then
																			v178 = 1;
																			break;
																		end
																	end
																end
															end
														end
														v83 = v83 + (873 - (415 + 457));
														break;
													end
												end
												break;
											end
										end
									end
								end
								v82 = 3;
							end
							if (v82 == 0) then
								v83 = 1;
								v84 = -1;
								v82 = 1;
							end
							if (v82 == 1) then
								v85 = {...};
								v86 = v13("#", ...) - 1;
								v82 = 2;
							end
						end
					end;
				end
				return v38(v37(), {}, v26)(...);
			end
			vv10(), ...);
			break;
		end
		if (v0 == 2) then
			v7 = table.concat;
			v8 = table.insert;
			v9 = math.ldexp;
			v0 = 3;
		end
		if (v0 == 0) then
			v1 = tonumber;
			v2 = string.byte;
			v3 = string.char;
			v0 = 1;
		end
		if (v0 == 4) then
			v13 = select;
			v14 = unpack or table.unpack;
			v15 = tonumber;
			v0 = 5;
		end
		if (v0 == 3) then
			v10 = getfenv or function()
				return _ENV;
			end;
			v11 = setmetatable;
			v12 = pcall;
			v0 = 4;
		end
	end
end
