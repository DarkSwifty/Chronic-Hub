--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 2) then
				function v22()
					local v39 = (1857 - (1479 + 73)) - ((425 - 309) + 189);
					local v40;
					while true do
						if (v39 == (1954 - (602 + 1351))) then
							return v40;
						end
						if (v39 == 0) then
							v40 = v1(v16, v19, v19);
							v19 = v19 + (367 - (72 + 294));
							v39 = 3 - (520 - (512 + 6));
						end
					end
				end
				v23 = nil;
				function v23()
					local v41 = 0;
					local v42;
					local v43;
					while true do
						if (v41 == (186 - (103 + 83))) then
							v42, v43 = v1(v16, v19, v19 + 1 + 1);
							v19 = v19 + (2 - 0);
							v41 = 1895 - (1391 + 503);
						end
						if (v41 == (853 - (707 + 145))) then
							return (v43 * ((1149 - (174 + 70)) - 649)) + v42;
						end
					end
				end
				v18 = 3;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v44, v45, v46, v47 = v1(v16, v19, v19 + (7 - (16 - 12)));
					v19 = v19 + 4;
					return (v47 * (16779006 - (1138 + 579 + 73))) + (v46 * (39759 + 25777)) + (v45 * (51 + 205)) + v44;
				end
				v25 = nil;
				v18 = 4;
			end
			if (v18 == 4) then
				function v25()
					local v48 = v24();
					local v49 = v24();
					local v50 = (1403 - (1094 + 308)) + 0;
					local v51 = (v21(v49, 1 + 0, 31 - 11) * ((4 - (1 + 1)) ^ (47 - (9 + 6)))) + v48;
					local v52 = v21(v49, 10 + 11, 1237 - (1204 + 2));
					local v53 = ((v21(v49, 5 + 27) == (1 + 0)) and -(781 - (614 + 166))) or (2 - 1);
					if (v52 == (0 + (0 - 0))) then
						if (v51 == (0 - 0)) then
							return v53 * (450 - (437 + (64 - 51)));
						else
							v52 = 1 + 0;
							v50 = 0 + 0;
						end
					elseif (v52 == (2328 - (80 + 201))) then
						return ((v51 == (0 + 0)) and (v53 * (1 / (792 - ((1228 - (193 + 323)) + 80))))) or (v53 * NaN);
					end
					return v8(v53, v52 - 1023) * (v50 + (v51 / ((1 + 1) ^ (8 + 7 + 37))));
				end
				v26 = nil;
				function v26(v31)
					local v54 = 1914 - (1786 + 128);
					local v55;
					local v56;
					while true do
						if (v54 == (3 - 1)) then
							v56 = {};
							for v76 = 1, #v55 do
								v56[v76] = v2(v1(v3(v55, v76, v76)));
							end
							v54 = 1 + 2;
						end
						if (v54 == (0 - 0)) then
							v55 = nil;
							if not v31 then
								local v81 = 0 - (0 - 0);
								while true do
									if (v81 == ((2333 - 1539) - (528 + 266))) then
										v31 = v24();
										if (v31 == (0 + 0)) then
											return "";
										end
										break;
									end
								end
							end
							v54 = 3 - 2;
						end
						if (v54 == (2 + (121 - (74 + 46)))) then
							return v6(v56);
						end
						if (v54 == (1 - 0)) then
							v55 = v3(v16, v19, (v19 + v31) - (1 + 0));
							v19 = v19 + v31;
							v54 = 151 - (63 + 86);
						end
					end
				end
				v18 = 5;
			end
			if (7 == v18) then
				function v30(v32, v33, v34)
					local v57 = 0;
					local v58;
					local v59;
					local v60;
					while true do
						if (v57 == 1) then
							v60 = v32[3];
							return function(...)
								local v82 = 1;
								local v83 = -1;
								local v84 = {...};
								local v85 = v12("#", ...) - 1;
								local function v86()
									local v87 = v58;
									local v88 = v59;
									local v89 = v60;
									local v90 = v28;
									local v91 = {};
									local v92 = {};
									local v93 = {};
									for v98 = 1013 - (884 + 129), v85 do
										if ((v98 >= v89) or ((1396 + (254 - 150)) == (19 + 1533))) then
											v91[v98 - v89] = v84[v98 + (3 - 2)];
										else
											v93[v98] = v84[v98 + 1 + 0];
										end
									end
									local v94 = (v85 - v89) + (802 - (151 + 79 + 571));
									local v95;
									local v96;
									while true do
										local v99 = 0 - (0 + 0);
										local v100;
										while true do
											if (((356 - (155 + (590 - 389))) == v99) or ((1749 + 1059) > (780 + 4121))) then
												v100 = 0 + 0;
												while true do
													if ((v100 == (1 + 0 + 0)) or ((2011 - ((865 - (20 + 591)) + 202)) >= (6202 - (641 + 861)))) then
														if (((5416 - 3141) > (2336 - (201 + 1564))) and (v96 <= (738 - (614 + 112)))) then
															if (((5723 - 2829) > 1046) and (v96 <= (2 + 3))) then
																if (((6048 - (1039 + 55 + 219)) == (21039 - 16304)) and (v96 <= (205 - ((250 - 131) + 84)))) then
																	if (((4641 - (100 + 149)) < (6778 - (941 + 136 + 866))) and (v96 <= ((0 - 0) + (0 - 0)))) then
																		for v138 = v95[2 + 0], v95[882 - (373 + 506)] do
																			v93[v138] = nil;
																		end
																	elseif ((v96 == ((1199 - (625 + 572)) - 1)) or (((5503 - (1440 + 508)) - (1627 + 346)) == (12157 - 7803))) then
																		v93[v95[868 - (165 + 701)]] = v93[v95[1633 - (936 + 47 + 647)]][v95[3 + 1]];
																	else
																		v82 = v95[3];
																	end
																elseif ((v96 <= (1121 - (207 + 911))) or ((5104 - 2980) > (9300 - 5707))) then
																	do
																		return;
																	end
																elseif ((((5087 - 3744) - (1031 + 292)) < ((23572 - 14003) - (13137 - 6929))) and (v96 == (10 - 6))) then
																	v93[v95[(24 - 17) - (302 - (5 + 292))]][v95[2 + 1]] = v93[v95[13 - (7 + 2)]];
																else
																	local v145 = 0;
																	local v146;
																	local v147;
																	while true do
																		if ((v145 == (1 + 0)) or ((5654 - (642 + 747)) > (7491 - 2773))) then
																			while true do
																				if (((4032 - (75 + 1552)) >= (1406 + 695)) and (v146 == (0 + 0))) then
																					v147 = v95[1722 - (1651 + 69)];
																					v93[v147](v13(v93, v147 + (1243 - (972 + 270)), v95[2 + 1]));
																					break;
																				end
																			end
																			break;
																		end
																		if ((v145 == 0) or ((11312 - 7429) < (11868 - 8659))) then
																			v146 = 0 + 0;
																			v147 = nil;
																			v145 = 2 - 1;
																		end
																	end
																end
															elseif ((v96 <= (1510 - (180 + 1322))) or ((11599 - (12638 - 5503)) == (2218 + (1212 - (200 + 810))))) then
																if (((474 + 218) <= (114 + 3864 + 86)) and (v96 <= ((1036 - (51 + 22)) - (822 + 135)))) then
																	v93[v95[7 - 5]]();
																elseif ((v96 == (164 - (16 + 141))) or ((2916 - (131 + 142)) == (4436 - 3509))) then
																	local v148 = (190 - (65 + 125)) + 0;
																	local v149;
																	local v150;
																	local v151;
																	while true do
																		if (((5133 - (166 + 899)) == (5445 - 1377)) and (v148 == (1 + 0))) then
																			v151 = nil;
																			while true do
																				if ((v149 == (0 - 0)) or ((10269 - 8138) > (2986 + 1526))) then
																					local v212 = 0 + 0;
																					while true do
																						if ((v212 == (1 - 0)) or ((2969 + 150) >= (3703 + 786 + 199))) then
																							v149 = 1 - 0;
																							break;
																						end
																						if (((5329 - 3723) <= (3704 - (96 + 759))) and (v212 == ((0 + 0) - 0))) then
																							v150 = 0 - 0;
																							v151 = nil;
																							v212 = 3 - 2;
																						end
																					end
																				end
																				if (((3685 - (1674 + 13)) <= (6836 - 3341)) and (v149 == (1 + 0 + 0))) then
																					while true do
																						if (((1987 + 1587) >= ((1449 + 2022) - (590 + 407 + 547))) and (v150 == (1704 - ((1835 - 425) + 294)))) then
																							v151 = v95[5 - 3];
																							v93[v151] = v93[v151](v13(v93, v151 + (4 - 3), v95[(13 - 4) - 6]));
																							break;
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if ((v148 == (0 + 0 + 0)) or ((1809 + 292) <= (5666 - 4433))) then
																			v149 = 1335 - (114 + 1221);
																			v150 = nil;
																			v148 = 1 + 0;
																		end
																	end
																elseif ((v95[374 - (46 + 326)] == v93[v95[4]]) or ((4718 - (30 + 270 + 780)) > (4912 - 1261))) then
																	v82 = v82 + (3 - 2);
																else
																	v82 = v95[267 - (147 + 117)];
																end
															elseif (((2840 + 684) == (3193 + 331)) and (v96 <= (21 - 11))) then
																if (((1292 - (52 + 12)) < (4114 - (418 + 886))) and (v96 == (941 - (673 + 259)))) then
																	v34[v95[547 - (403 + 141)]] = v93[v95[2 - 0]];
																else
																	v93[v95[8 - 6]] = v30(v88[v95[587 - (448 + 136)]], nil, v34);
																end
															elseif ((v96 > (222 - (15 + 0 + 196))) or ((2044 - (55 + 379)) <= (155 - 48))) then
																v93[v95[1598 - (67 + 436 + 1093)]] = v95[3];
															else
																local v157 = 0 - 0;
																local v158;
																local v159;
																local v160;
																while true do
																	if (((6871 - 4058) >= ((5111 + 1473) - (6580 - (1364 + 376)))) and (v157 == (4 - 3))) then
																		v160 = nil;
																		while true do
																			if ((v158 == (1849 - (617 + 1231))) or ((1059 + 344) > (3726 - (221 + 475)))) then
																				while true do
																					if ((((4851 - 3655) + 124) <= (2549 - (461 + 118))) and (v159 == (78 - (71 + (27 - 20))))) then
																						v160 = v95[2 + 0];
																						v93[v160] = v93[v160](v13(v93, v160 + (1 - 0), v83));
																						break;
																					end
																				end
																				break;
																			end
																			if ((v158 == (678 - (575 + 103))) or ((774 + 569) < (1705 - 1107))) then
																				local v213 = 0 + 0;
																				while true do
																					if (((0 + 0) == v213) or ((4063 - ((667 - 311) + 360)) >= (2858 + 1874))) then
																						v159 = 0 - 0;
																						v160 = nil;
																						v213 = 1841 - (1829 + 11);
																					end
																					if (((3590 - (8 + 16 + 259)) == (6635 - 3328)) and (v213 == ((1 + 0) - 0))) then
																						v158 = 3 - 2;
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((v157 == (1589 - (929 + 660))) or ((95 + 702) >= (565 + 561))) then
																		v158 = 1491 - (698 + 793);
																		v159 = nil;
																		v157 = 1;
																	end
																end
															end
														elseif ((v96 <= (45 - (3 + 24))) or ((4877 - (1006 + 992)) < (1003 - (52 + 242)))) then
															if (((4040 - (359 + 1125)) < (8543 - 5316)) and (v96 <= (39 - 24))) then
																if (((2492 + 767) <= (12860 - 9051)) and (v96 <= (1382 - (435 + 934)))) then
																	if (((7039 - 5298) <= 4441) and v93[v95[5 - 3]]) then
																		v82 = v82 + (1 - 0);
																	else
																		v82 = v95[5 - 2];
																	end
																elseif ((v96 > (19 - 5)) or ((1524 - (90 + 864)) > (4087 - (1058 + 940)))) then
																	v93[v95[1 + 1]] = v95[8 - 5] ~= (0 - 0);
																else
																	v93[v95[1567 - (392 + 1173)]] = v34[v95[3 + 0]];
																end
															elseif ((v96 <= 16) or ((1708 - (26 + 436)) > (1253 + 518))) then
																if (((5888 - (144 + 1505)) == (1403 + (3285 - (390 + 59)))) and (v93[v95[825 - (22 + 801)]] == v95[245 - (169 + (240 - 168))])) then
																	v82 = v82 + (2 - 1);
																else
																	v82 = v95[3 + 0];
																end
															elseif ((v96 == (2000 - (1904 + 79))) or (((2928 - (311 + 838)) + 3093) <= (877 - 647))) then
																local v166 = 1803 - (997 + 806);
																local v167;
																local v168;
																local v169;
																while true do
																	if (((5251 - (930 + 176 + 494)) >= (3902 - ((2701 - (874 + 144)) + 21 + 11))) and ((0 - 0) == v166)) then
																		v167 = 0 - 0;
																		v168 = nil;
																		v166 = 1 + (1424 - (1134 + 290));
																	end
																	if ((v166 == (1 + 0)) or ((5298 - (15031 - 10951)) >= (4435 - 2985))) then
																		v169 = nil;
																		while true do
																			if (((0 + 0) == v167) or ((1222 + 757) <= (29 + 21))) then
																				local v214 = (92 + 1464) - (587 + 969);
																				while true do
																					if (((163 + 567) > ((2101 - (1044 + 946)) + 234)) and ((0 - 0) == v214)) then
																						v168 = v95[790 - (225 + 563)];
																						v169 = v93[v95[1 + (7 - 5)]];
																						v214 = (3876 - 2387) - (618 + 870);
																					end
																					if (((194 + 2519) >= (1630 - 1132)) and (v214 == (1 + 0))) then
																						v167 = 1 + (1692 - (524 + 1168));
																						break;
																					end
																				end
																			end
																			if (((6818 - 3151) >= (5855 - 3019)) and (v167 == (1035 - (24 + 1010)))) then
																				v93[v168 + (583 - (410 + 172))] = v169;
																				v93[v168] = v169[v95[15 - 11]];
																				break;
																			end
																		end
																		break;
																	end
																end
															else
																local v170 = 0;
																local v171;
																local v172;
																while true do
																	if (((0 + 0) == v170) or (((1224 - 628) + 329) == (1444 - ((1536 - 543) + 130)))) then
																		v171 = 0 + (0 - 0);
																		v172 = nil;
																		v170 = (2893 - (171 + 1240)) - (692 + 125 + 664);
																	end
																	if ((v170 == (1 + 0)) or (((5495 - 1669) - (138 + 215)) >= (2884 + 1529))) then
																		while true do
																			if (((0 - 0) == v171) or ((1244 - (74 + (1615 - (171 + 1333)))) < (191 + 672))) then
																				v172 = v95[1 + 1];
																				v93[v172](v93[v172 + (4 - 3) + 0]);
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v96 <= (708 - (227 + 460))) or ((200 + 465) > ((2623 - (118 + 222)) - (879 + (1128 - (668 + 269)))))) then
															if (((5405 - (142 + 150 + 456)) > (264 + 369)) and (v96 <= (1805 - (276 + 1510)))) then
																local v132 = 347 - (148 + (402 - 203));
																local v133;
																local v134;
																local v135;
																local v136;
																local v137;
																while true do
																	if ((v132 == (507 - (289 + 217))) or ((5465 - (70 + 808)) < (3222 - 1897))) then
																		v135 = nil;
																		v136 = nil;
																		v132 = 610 - (90 + 518);
																	end
																	if (((6502 - 2520) > ((18 + 5430) - (1878 + 29))) and (v132 == (0 + 0 + 0))) then
																		v133 = 880 - (66 + 814);
																		v134 = nil;
																		v132 = 1;
																	end
																	if ((v132 == (3 - 1)) or ((4887 - (337 + 9)) == (3331 - (568 + (4113 - 2726))))) then
																		v137 = nil;
																		while true do
																			if (((4353 - (190 + 1795)) <= (3050 + 1063)) and (v133 == (895 - (427 + 96 + 145 + 227)))) then
																				v134 = v95[4 - (1063 - (8 + 1053))];
																				v135, v136 = v90(v93[v134](v13(v93, v134 + (1 - 0), v95[4 - 1])));
																				v133 = (551 - (382 + 167)) - 1;
																			end
																			if ((1679 > (3083 - 1435)) and (v133 == (1 + 0))) then
																				local v203 = 0 - 0;
																				while true do
																					if ((v203 == (1 + 0)) or ((1076 + 2907) <= (557 - 269))) then
																						v133 = 2 + 0;
																						break;
																					end
																					if ((v203 == (0 + 0)) or ((5169 - (211 + 1176)) < (260 + 1009 + 1478))) then
																						v83 = (v136 + v134) - (1 + 0 + 0);
																						v137 = 501 - (149 + 352);
																						v203 = 1 + 0;
																					end
																				end
																			end
																			if (((7597 - 4743) > 2179) and ((1508 - (1493 + 13)) == v133)) then
																				for v207 = v134, v83 do
																					local v208 = 1438 - (1296 + 142);
																					while true do
																						if (((3015 - (362 + 76)) == ((2603 - (84 + 216)) + 274)) and (v208 == (146 - (63 + 83)))) then
																							v137 = v137 + 1 + 0;
																							v93[v207] = v135[v137];
																							break;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															elseif ((v96 > (1371 - (689 + 662))) or ((598 + 461) == (1027 + 3255))) then
																v93[v95[1974 - (1895 + (367 - 290))]] = v93[v95[(448 + 169) - (221 + 393)]];
															else
																local v175 = 0 + 0;
																local v176;
																local v177;
																local v178;
																while true do
																	if (((387 + 645 + 278) < (11523 - (23227 - 16354))) and (v175 == ((6 - 3) - 2))) then
																		v178 = nil;
																		while true do
																			if (((2473 - (90 + 170)) > (1805 + 327)) and ((3 - 2) == v176)) then
																				for v224 = v177 + 1, v95[294 - (210 + 81)] do
																					v7(v178, v93[v224]);
																				end
																				break;
																			end
																			if ((v176 == 0) or ((6151 - 2965) == (5142 - (20 + 402)))) then
																				v177 = v95[2 - (0 - 0)];
																				v178 = v93[v177];
																				v176 = 1 + 0;
																			end
																		end
																		break;
																	end
																	if (((19 + 14 + 13) <= (2908 - 2167)) and (v175 == 0)) then
																		v176 = 0 + 0;
																		v177 = nil;
																		v175 = 1;
																	end
																end
															end
														elseif ((((828 - 607) + 806) <= (3541 - (109 + 63))) and (v96 <= (1346 - (242 + 1081)))) then
															if ((1229 < (411 + 1406)) and (v96 == (1542 - (613 + 322 + 585)))) then
																v93[v95[2 + 0]] = {};
															else
																local v180 = (0 - 0) - (0 + 0);
																local v181;
																local v182;
																local v183;
																while true do
																	if ((((387 + 689) - 267) <= (13078 - (19129 - 10131))) and (v180 == ((4 - 1) - (4 - 2)))) then
																		v183 = v95[14 - 11];
																		for v204 = 493 - (45 + 447), v183 do
																			v182[v204] = v93[v181 + v204];
																		end
																		break;
																	end
																	if ((v180 == (1347 - (518 + 829))) or ((2114 - (13 + 12 + 14)) >= (2347 + 2203))) then
																		v181 = v95[5 - 3];
																		v182 = v93[v181];
																		v180 = 1 + 0;
																	end
																end
															end
														elseif ((v96 > (1304 - (1227 + 53))) or ((1744 + 1489) < ((2404 - (50 + 632)) - 1288))) then
															local v184 = 0 + 0 + 0;
															local v185;
															local v186;
															while true do
																if (((15723 - 11773) == (3799 + 151)) and (v184 == (1727 - (657 + 1070)))) then
																	v185 = 0 - 0;
																	v186 = nil;
																	v184 = 1 + 0;
																end
																if (((1769 + 2452) > (1774 + 113)) and (v184 == (938 - (480 + 457)))) then
																	while true do
																		if (((299 + 1122) < (1403 + (2980 - 1743))) and (v185 == (1845 - (1632 + 213)))) then
																			v186 = v95[1248 - (927 + 319)];
																			v93[v186] = v93[v186]();
																			break;
																		end
																	end
																	break;
																end
															end
														else
															v93[v95[1 + 1]][v95[14 - 11]] = v95[1261 - (1209 + 48)];
														end
														v82 = v82 + (1 - 0);
														break;
													end
													if (((10009 - 6481) >= (3059 - 1287)) and (v100 == (0 + 0))) then
														local v120 = 0 - 0;
														while true do
															if ((v120 == (1 + 0)) or (1820 < (1799 - (1280 + 482)))) then
																v100 = 2 - 1;
																break;
															end
															if ((v120 == (1486 - (932 + 554))) or ((1331 - (358 + (2396 - 1533))) > (2431 + 669))) then
																v95 = v87[v82];
																v96 = v95[(623 - 143) - (284 + 195)];
																v120 = 1 + 0;
															end
														end
													end
												end
												break;
											end
										end
									end
								end
								A, B = v28(v11(v86));
								if not A[1] then
									local v97 = v32[4][v82] or "?";
									error("Script error at [" .. v97 .. "]:" .. A[2]);
								else
									return v13(A, 2, B);
								end
							end;
						end
						if (v57 == 0) then
							v58 = v32[1];
							v59 = v32[2];
							v57 = 1;
						end
					end
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 1) then
				v21 = nil;
				function v21(v35, v36, v37)
					if v37 then
						local v69 = (v35 / ((412 - (340 + 70)) ^ (v36 - (1 + 0)))) % ((1 + 1) ^ (((v37 - ((80 + 14) - (47 + 46))) - (v36 - (798 - (405 + 392)))) + 1 + 0));
						return v69 - (v69 % (1 + 0));
					else
						local v70 = (2 + 0) ^ (v36 - (2 - 1));
						return (((v35 % (v70 + v70)) >= v70) and (1 + 0)) or (1688 - (348 + 626 + 714));
					end
				end
				v22 = nil;
				v18 = 2;
			end
			if (6 == v18) then
				v29 = nil;
				function v29()
					local v61 = 0 - 0;
					local v62;
					local v63;
					local v64;
					local v65;
					local v66;
					local v67;
					local v68;
					while true do
						if (v61 == (6 - 4)) then
							local v75 = 0;
							while true do
								if (v75 == 0) then
									v66 = nil;
									v67 = nil;
									v75 = 1;
								end
								if (v75 == 1) then
									v61 = 3;
									break;
								end
							end
						end
						if (3 == v61) then
							v68 = nil;
							while true do
								local v78 = 0 + 0;
								while true do
									if (v78 == (3 - 2)) then
										if ((1 - 0) == v62) then
											v66 = {v63,v64,nil,v65};
											v67 = v24();
											v68 = {};
											v62 = 2;
										end
										if (v62 == (386 - (71 + 312))) then
											local v101 = 0;
											while true do
												local v108 = 928 - (831 + 97);
												while true do
													if (v108 == (0 + 0)) then
														if (v101 ~= (1 + 0)) then
														else
															return v66;
														end
														if ((0 + 0) == v101) then
															for v121 = 1, v24() do
																v64[v121 - 1] = v29();
															end
															for v123 = 4 - 3, v24() do
																v65[v123] = v24();
															end
															v101 = 1;
														end
														break;
													end
												end
											end
										end
										break;
									end
									if ((1194 - (854 + 340)) == v78) then
										if (v62 == (0 - 0)) then
											local v102 = 0 - 0;
											while true do
												if (v102 ~= (186 - (166 + 20))) then
												else
													v63 = {};
													v64 = {};
													v102 = 1;
												end
												if (1 ~= v102) then
												else
													v65 = {};
													v62 = 127 - (73 + 53);
													break;
												end
											end
										end
										if (2 == v62) then
											for v109 = 1, v67 do
												local v110 = 0;
												local v111;
												local v112;
												local v113;
												while true do
													if ((0 + 0) ~= v110) then
													else
														v111 = 0;
														v112 = nil;
														v110 = 16 - (12 + 3);
													end
													if (v110 == 1) then
														v113 = nil;
														while true do
															if (v111 == (1 + 0)) then
																if (v112 == (1 - 0)) then
																	v113 = v22() ~= (0 - 0);
																elseif (v112 == (2 + 0)) then
																	v113 = v25();
																elseif (v112 == (10 - 7)) then
																	v113 = v26();
																end
																v68[v109] = v113;
																break;
															end
															if (v111 == (0 - 0)) then
																local v126 = 401 - (5 + 396);
																while true do
																	if (v126 ~= (431 - (401 + 29))) then
																	else
																		v111 = 1;
																		break;
																	end
																	if (v126 ~= 0) then
																	else
																		local v130 = 0;
																		while true do
																			if (v130 ~= (4 - 3)) then
																			else
																				v126 = 1;
																				break;
																			end
																			if (v130 == 0) then
																				v112 = v22();
																				v113 = nil;
																				v130 = 1 + 0;
																			end
																		end
																	end
																end
															end
														end
														break;
													end
												end
											end
											v66[120 - (93 + 24)] = v22();
											for v114 = 1, v24() do
												local v115 = 0;
												local v116;
												local v117;
												local v118;
												local v119;
												while true do
													if ((277 - (14 + 263)) ~= v115) then
													else
														v116 = 0;
														v117 = nil;
														v115 = 1 + 0;
													end
													if (v115 == 2) then
														while true do
															if (v116 ~= (0 + 0)) then
															else
																local v127 = 0 + 0;
																while true do
																	if (v127 == 0) then
																		v117 = 0 + 0;
																		v118 = nil;
																		v127 = 1;
																	end
																	if (v127 == (669 - (473 + 195))) then
																		v116 = 4 - 3;
																		break;
																	end
																end
															end
															if (v116 == 1) then
																v119 = nil;
																while true do
																	if (v117 == (1732 - (1650 + 82))) then
																		local v131 = 1466 - (121 + 1345);
																		while true do
																			if (v131 == (1 - 0)) then
																				v117 = 1 + 0;
																				break;
																			end
																			if (0 == v131) then
																				v118 = 1007 - (660 + 347);
																				v119 = nil;
																				v131 = 1 + 0;
																			end
																		end
																	end
																	if (1 ~= v117) then
																	else
																		while true do
																			if (v118 == (660 - (406 + 254))) then
																				v119 = v22();
																				if (v21(v119, 1457 - (809 + 647), 1 + 0) == 0) then
																					local v189 = 0;
																					local v190;
																					local v191;
																					local v192;
																					while true do
																						if ((1105 - (64 + 1041)) == v189) then
																							local v197 = 0 + 0;
																							while true do
																								if (v197 == 0) then
																									v190 = v21(v119, 1 + 1, 1 + 2);
																									v191 = v21(v119, 4, 6);
																									v197 = 1 - 0;
																								end
																								if (v197 == (1 + 0)) then
																									v189 = 1 + 0;
																									break;
																								end
																							end
																						end
																						if (v189 ~= 2) then
																						else
																							local v198 = 0 + 0;
																							local v199;
																							while true do
																								if (v198 == 0) then
																									v199 = 0;
																									while true do
																										if (0 == v199) then
																											local v233 = 0;
																											while true do
																												if (v233 == (3 - 2)) then
																													v199 = 1;
																													break;
																												end
																												if (v233 ~= (0 + 0)) then
																												else
																													if (v21(v191, 1 - 0, 578 - (497 + 80)) == (2 - 1)) then
																														v192[2] = v68[v192[1 + 1]];
																													end
																													if (v21(v191, 2, 2) == (1 - 0)) then
																														v192[3] = v68[v192[3]];
																													end
																													v233 = 755 - (322 + 432);
																												end
																											end
																										end
																										if (v199 == (1 + 0)) then
																											v189 = 1 + 2;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						if ((1 + 2) == v189) then
																							if (v21(v191, 3, 3) == (1 - 0)) then
																								v192[4] = v68[v192[400 - (8 + 388)]];
																							end
																							v63[v114] = v192;
																							break;
																						end
																						if ((392 - (347 + 44)) == v189) then
																							local v201 = 0 + 0;
																							while true do
																								if (v201 == 0) then
																									local v223 = 0 - 0;
																									while true do
																										if (v223 == 0) then
																											v192 = {v23(),v23(),nil,nil};
																											if (v190 == 0) then
																												local v234 = 0;
																												while true do
																													if (0 ~= v234) then
																													else
																														v192[3] = v23();
																														v192[2 + 2] = v23();
																														break;
																													end
																												end
																											elseif (v190 == 1) then
																												v192[3 + 0] = v24();
																											elseif (v190 == (2 + 0)) then
																												v192[3] = v24() - ((3 - 1) ^ 16);
																											elseif (v190 == (3 + 0)) then
																												local v243 = 0;
																												local v244;
																												local v245;
																												local v246;
																												while true do
																													if (v243 == (597 - (93 + 504))) then
																														v244 = 754 - (303 + 451);
																														v245 = nil;
																														v243 = 1;
																													end
																													if (v243 ~= 1) then
																													else
																														v246 = nil;
																														while true do
																															if (v244 == 1) then
																																while true do
																																	if (v245 ~= 0) then
																																	else
																																		v246 = 1790 - (1170 + 620);
																																		while true do
																																			if (v246 ~= 0) then
																																			else
																																				v192[1549 - (1482 + 64)] = v24() - (2 ^ 16);
																																				v192[13 - 9] = v23();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																															if (v244 == 0) then
																																local v247 = 0;
																																while true do
																																	if (v247 == 1) then
																																		v244 = 259 - (120 + 138);
																																		break;
																																	end
																																	if (v247 ~= 0) then
																																	else
																																		v245 = 1528 - (202 + 1326);
																																		v246 = nil;
																																		v247 = 3 - 2;
																																	end
																																end
																															end
																														end
																														break;
																													end
																												end
																											end
																											v223 = 1;
																										end
																										if (v223 ~= (1 + 0)) then
																										else
																											v201 = 1 + 0;
																											break;
																										end
																									end
																								end
																								if (v201 == 1) then
																									v189 = 2;
																									break;
																								end
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
																break;
															end
														end
														break;
													end
													if (v115 == 1) then
														v118 = nil;
														v119 = nil;
														v115 = 2;
													end
												end
											end
											v62 = 3;
										end
										v78 = 1924 - (624 + 1299);
									end
								end
							end
							break;
						end
						if ((1328 - (561 + 766)) ~= v61) then
						else
							v64 = nil;
							v65 = nil;
							v61 = 2;
						end
						if (v61 ~= 0) then
						else
							v62 = 1524 - (104 + 1420);
							v63 = nil;
							v61 = 1;
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v38)
					if (v1(v38, 2) == 79) then
						v20 = v0(v3(v38, 1, 1));
						return "";
					else
						local v71 = v2(v0(v38, 16));
						if v20 then
							local v79 = 0;
							local v80;
							while true do
								if (v79 == 0) then
									v80 = v5(v71, v20);
									v20 = nil;
									v79 = 1;
								end
								if (v79 == 1) then
									return v80;
								end
							end
						else
							return v71;
						end
					end
				end);
				v18 = 1;
			end
		end
	end
	vv9(), ...);
end
