--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v31)
					if (v1(v31, 2) == 79) then
						v20 = v0(v3(v31, 1, 1));
						return "";
					else
						local v68 = 0;
						local v69;
						while true do
							if (v68 == 0) then
								v69 = v2(v0(v31, 16));
								if v20 then
									local v83 = v5(v69, v20);
									v20 = nil;
									return v83;
								else
									return v69;
								end
								break;
							end
						end
					end
				end);
				v21 = nil;
				v18 = 1;
			end
			if (v18 == 5) then
				v30 = nil;
				function v30(v32, v33, v34)
					local v39 = v32[1];
					local v40 = v32[2];
					local v41 = v32[3];
					return function(...)
						local v70 = 0;
						local v71;
						local v72;
						local v73;
						local v74;
						local v75;
						while true do
							if (v70 == 2) then
								v75 = nil;
								function v75()
									local v84 = v39;
									local v85 = v40;
									local v86 = v41;
									local v87 = v28;
									local v88 = {};
									local v89 = {};
									local v90 = {};
									for v96 = 0, v74 do
										if ((v96 >= v86) or ((554 + 37 + 8 + 8) > (5151 - 2919))) then
											v88[v96 - v86] = v73[v96 + 1 + 0];
										else
											v90[v96] = v73[v96 + 1 + 0];
										end
									end
									local v91 = (v74 - v86) + 1 + (1445 - (1171 + 274));
									local v92;
									local v93;
									while true do
										local v97 = 0 + 0 + 0;
										while true do
											if ((v97 == (0 + 0)) or ((22 + 89) == (152 + 895))) then
												v92 = v84[v71];
												v93 = v92[1 - (248 - (135 + 113))];
												v97 = 1 - 0;
											end
											if (((1370 + 36) < (2829 + (1543 - 1052))) and (v97 == (1 + 0))) then
												if ((v93 <= 12) or ((9965 - 6972) >= (5422 - (127 + 748)))) then
													if (((1782 + 2187) == (143 + 3826)) and (v93 <= (3 + 2))) then
														if ((3764 > (4224 - (498 + 1048))) and (v93 <= (5 - 3))) then
															if (((3670 - 1677) <= (4374 - (26 + 3))) and (v93 <= (0 + 0))) then
																v90[v92[(2422 - 1584) - (593 + 243)]]();
															elseif ((v93 == 1) or (2792 >= (13894 - 10034))) then
																local v138 = 0;
																local v139;
																local v140;
																while true do
																	if ((v138 == 0) or ((59 + 14) >= (5631 - (4469 - (546 + 1389))))) then
																		v139 = 1373 - (236 + 1137);
																		v140 = nil;
																		v138 = 2 - 1;
																	end
																	if ((v138 == (1753 - (1386 + 366))) or ((2157 - (8 + 10)) >= (14131 - 11283))) then
																		while true do
																			if ((((4972 - (390 + 380)) - (575 + 433)) <= (6137 - (195 + 1098))) and (v139 == (1744 - (1170 + 574)))) then
																				v140 = v92[3 - (2 - 1)];
																				v90[v140] = v90[v140]();
																				break;
																			end
																		end
																		break;
																	end
																end
															else
																v90[v92[3 - (2 - 1)]] = v92[3] ~= (0 - (125 - (102 + 23)));
															end
														elseif ((v93 <= 3) or (((10397 - (14 + 570)) - (424 + 4760)) <= (4007 - (1406 + 95)))) then
															v90[v92[1188 - (857 + 329)]][v92[3]] = v92[699 - (101 + 594)];
														elseif ((v93 > ((3011 - 1095) - (299 + 1613))) or (((12998 - (1186 + 84)) - 8543) > (887 + 2889))) then
															local v142 = (0 - 0) + 0;
															local v143;
															local v144;
															local v145;
															while true do
																if ((v142 == (0 + 0)) or (2322 <= (1590 + (1737 - (758 + 640))))) then
																	v143 = 904 - (672 + 232);
																	v144 = nil;
																	v142 = 1255 - (319 + 935);
																end
																if ((v142 == (1590 - (25 + 1564))) or ((8023 - 5869) < (1624 - (200 + 704)))) then
																	v145 = nil;
																	while true do
																		if ((v143 == 0) or ((14290 - (32925 - 22418)) >= ((14656 - (49 + 92)) - 10037))) then
																			v144 = 0 + 0;
																			v145 = nil;
																			v143 = 4 - 3;
																		end
																		if ((v143 == 1) or (4852 <= (8748 - 4890))) then
																			while true do
																				if (((2618 - (111 + 17)) <= (5010 - (527 + 183))) and ((136 - (72 + 64)) == v144)) then
																					v145 = v92[2];
																					v90[v145](v13(v90, v145 + 1, v92[1504 - (321 + 1180)]));
																					break;
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														else
															local v146 = 0 + 0;
															local v147;
															local v148;
															while true do
																if ((v146 == 0) or ((11239 - 8516) > (7685 - 4719))) then
																	local v188 = 39 - (36 + 3);
																	while true do
																		if ((v188 == (2000 - (1699 + 300))) or ((3384 - ((1481 - 869) + 1281)) == (125 + 204 + 184))) then
																			v146 = 1 + 0;
																			break;
																		end
																		if ((v188 == (477 - (360 + 117))) or ((1629 - 435) >= 2384)) then
																			v147 = v92[1456 - (41 + 1413)];
																			v148 = v90[v92[3 + 0]];
																			v188 = 1 + 0;
																		end
																	end
																end
																if ((v146 == 1) or (3051 < (2640 - (363 + 451)))) then
																	v90[v147 + 1 + 0] = v148;
																	v90[v147] = v148[v92[952 - (593 + 355)]];
																	break;
																end
															end
														end
													elseif (((1917 - 910) == (3379 - 2372)) and (v93 <= 8)) then
														if ((v93 <= (5 + 1)) or (2492 <= (3055 - (23 + 1158)))) then
															v90[v92[2 + 0]] = v30(v85[v92[1919 - ((1060 - 677) + 1533)]], nil, v34);
														elseif ((v93 == (29 - 22)) or (4556 >= 4898)) then
															for v181 = v92[2], v92[9 - 6] do
																v90[v181] = nil;
															end
														else
															v90[v92[1 + 1]] = v92[7 - 4];
														end
													elseif (((6518 - 1739) == (9312 - 4533)) and (v93 <= 10)) then
														if ((v93 == (3 + 6)) or ((86 + 4286) == (13961 - 9748))) then
															if ((v90[v92[2 + 0]] == v92[4]) or (2367 <= (1050 + 535))) then
																v71 = v71 + 1;
															else
																v71 = v92[3];
															end
														else
															local v151 = 0 + 0;
															local v152;
															local v153;
															while true do
																if ((v151 == (0 + 0)) or ((4762 - 2458) > (13826 - 9769))) then
																	v152 = 245 - (72 + 173);
																	v153 = nil;
																	v151 = 1;
																end
																if (((4752 - (363 + 277)) > 3522) and (v151 == (3 - 2))) then
																	while true do
																		if ((((6484 + 5641) - 7592) >= (3651 - (522 + 349))) and (v152 == (926 - (720 + (698 - (84 + 408)))))) then
																			v153 = v92[1141 - (355 + 784)];
																			v90[v153] = v90[v153](v13(v90, v153 + (3 - 2), v72));
																			break;
																		end
																	end
																	break;
																end
															end
														end
													elseif ((v93 == (1548 - ((2071 - (1228 + 134)) + 828))) or ((1907 + 378) < 1146)) then
														if ((((7918 - 6250) - (811 + 44)) <= (4308 - (92 + 1004))) and (v92[1 + 1] == v90[v92[2 + 1 + 1]])) then
															v71 = v71 + (1669 - (1406 + 262));
														else
															v71 = v92[744 - (717 + 24)];
														end
													else
														v90[v92[2 + 0]][v92[2 + 1]] = v90[v92[10 - 6]];
													end
												elseif ((v93 <= (390 - (371 + 1))) or ((1644 - (539 + 460)) >= (1289 - (172 + 352)))) then
													if ((v93 <= ((760 - (445 + 304)) + (1366 - (1161 + 201)))) or ((2235 + 1431) < 825)) then
														if ((v93 <= (674 - (97 + 564))) or ((6528 - 3334) > (6005 - (528 + 539)))) then
															local v127 = 1080 - (186 + 894);
															local v128;
															local v129;
															while true do
																if ((786 < (10910 - 6222)) and (v127 == ((2715 - 1650) - (200 + 864)))) then
																	while true do
																		if ((v128 == (1100 - (290 + 810))) or ((3549 - ((2784 - 1469) + 40)) <= (222 + (1619 - (320 + 514))))) then
																			v129 = v92[(1229 - 595) - (192 + 440)];
																			v90[v129] = v90[v129](v13(v90, v129 + (3 - 2), v92[629 - (577 + 49)]));
																			break;
																		end
																	end
																	break;
																end
																if (((3413 - (57 + 66)) < (10184 - 6204)) and (((256 - (200 + 56)) - 0) == v127)) then
																	v128 = 0;
																	v129 = nil;
																	v127 = 1;
																end
															end
														elseif ((v93 > (7 + 7)) or ((5881 - 3465) <= (3344 - (1030 + 886)))) then
															v90[v92[7 - 5]] = v90[v92[128 - (25 + 49 + 51)]];
														else
															do
																return;
															end
														end
													elseif (((2475 + 60) >= ((3236 - (249 + 321)) - 1171)) and (v93 <= ((33 + 24) - 41))) then
														if (((761 + 3469) > 3254) and v90[v92[2 + 0]]) then
															v71 = v71 + 1;
														else
															v71 = v92[3];
														end
													elseif (((6435 - (69 + 1467)) > (4215 - (365 + 1105))) and (v93 == (21 - 4))) then
														v90[v92[735 - (544 + 189)]] = {};
													else
														local v160 = 0 + 0;
														local v161;
														local v162;
														local v163;
														local v164;
														local v165;
														while true do
															if ((v160 == (5 - (4 - 1))) or ((20178 - 15675) < (387 + 1018))) then
																v165 = nil;
																while true do
																	if ((v161 == (2 - 0)) or ((2289 - (578 + 63)) >= ((7687 - 3474) - (7 + (109 - 77))))) then
																		for v218 = v162, v72 do
																			local v219 = 115 - (71 + 44);
																			local v220;
																			local v221;
																			while true do
																				if ((v219 == (1 + 0 + 0)) or ((2567 - (38 + 46)) < (722 - (274 + 30)))) then
																					while true do
																						if ((v220 == (0 + 0)) or (((5240 - (269 + 303)) - (232 + 228)) == ((691 - 428) + 1334))) then
																							v221 = 630 - (426 + (496 - 292));
																							while true do
																								if (((3789 - (198 + 536)) > 2605) and ((1855 - ((2861 - (387 + 911)) + 292)) == v221)) then
																									v165 = v165 + 1;
																									v90[v218] = v163[v165];
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if ((v219 == ((0 - 0) + 0)) or (450 == (4125 - ((2115 - (1098 + 224)) + 240)))) then
																					v220 = 0 + 0;
																					v221 = nil;
																					v219 = 1;
																				end
																			end
																		end
																		break;
																	end
																	if ((1923 == (2239 - (260 + 56))) and (v161 == (274 - (18 + 256)))) then
																		local v208 = 1046 - (990 + 56);
																		while true do
																			if (((11052 - 6168) >= 2658) and (v208 == (1789 - (1073 + (1183 - (220 + 248)))))) then
																				v161 = 1;
																				break;
																			end
																			if (((0 - 0) == v208) or (2231 > 2739)) then
																				v162 = v92[2 + 0];
																				v163, v164 = v87(v90[v162](v13(v90, v162 + (4 - (8 - 5)), v92[(1056 - 368) - (412 + 3 + 270)])));
																				v208 = 1338 - (440 + (1842 - (591 + 354)));
																			end
																		end
																	end
																	if ((v161 == (1713 - (752 + 346 + 614))) or ((1487 + 2858) < (3391 + 368))) then
																		local v209 = 637 - (100 + 537);
																		while true do
																			if ((v209 == (0 - 0)) or ((6204 - (6487 - 4403)) <= (2505 + 1233))) then
																				v72 = (v164 + v162) - (2 - 1);
																				v165 = 34 - (11 + 23);
																				v209 = 1;
																			end
																			if (((4447 - (490 + 509)) > 611) and (v209 == (317 - (107 + 209)))) then
																				v161 = 479 - (44 + 433);
																				break;
																			end
																		end
																	end
																end
																break;
															end
															if ((v160 == (0 + 0)) or (3086 < (99 + 47))) then
																v161 = (1449 - (327 + 1122)) - 0;
																v162 = nil;
																v160 = 917 - (118 + 798);
															end
															if (((1 + 0) == v160) or ((5754 - 4047) >= (6301 - (257 + 1195)))) then
																v163 = nil;
																v164 = nil;
																v160 = 626 - (148 + 476);
															end
														end
													end
												elseif ((v93 <= (1771 - (1216 + 137 + 397))) or (1260 < (1550 - (619 + 117)))) then
													if ((v93 <= (18 + 1)) or ((15596 - 11540) <= (260 + 1083))) then
														v90[v92[186 - (155 + 29)]] = v34[v92[3 + 0]];
													elseif ((v93 > (19 + 1)) or ((377 + 2453) == (2931 - 1732))) then
														local v166 = (0 - 0) - 0;
														local v167;
														local v168;
														local v169;
														while true do
															if (((2546 + 1149) < (4949 - (92 + 25 + 140))) and (v166 == 1)) then
																v169 = v92[3];
																for v198 = 2 - 1, v169 do
																	v168[v198] = v90[v167 + v198];
																end
																break;
															end
															if ((v166 == (281 - (151 + 130))) or ((1091 + 1322) >= (4243 - (357 + 519 + 785)))) then
																v167 = v92[1304 - (771 + 531)];
																v168 = v90[v167];
																v166 = 1 - 0;
															end
														end
													else
														local v170 = 744 - (673 + 71);
														local v171;
														local v172;
														while true do
															if ((v170 == (0 - 0)) or ((4725 - (724 + 46)) <= (2216 + 460))) then
																local v195 = 0;
																while true do
																	if (((1409 + 932) > (3885 - (1790 + 159))) and (v195 == 0)) then
																		v171 = v92[2];
																		v172 = v90[v171];
																		v195 = 1 - 0;
																	end
																	if (((11148 - 8276) <= 4575) and (v195 == (1 + (1685 - (269 + 1416))))) then
																		v170 = 1272 - (903 + (739 - (242 + 129)));
																		break;
																	end
																end
															end
															if ((v170 == (2 - 1)) or ((8089 - 4878) <= (2918 - (203 + 727 + 321)))) then
																for v201 = v171 + (1691 - (131 + 1559)), v92[2 + 1] do
																	v7(v172, v90[v201]);
																end
																break;
															end
														end
													end
												elseif ((v93 <= 23) or ((2854 + 22) == (3253 - 2081))) then
													if (((2454 - (24 + 558)) == (4578 - 2706)) and (v93 > (15 + 7))) then
														v71 = v92[9 - 6];
													else
														v90[v92[2 + 0]] = v90[v92[5 - 2]][v92[1311 - (193 + (2648 - (18 + 1516)))]];
													end
												elseif ((v93 > (15 + 9)) or ((6024 - (837 + 1148)) == (341 - (7 + 57 + 47)))) then
													local v176 = 0 - (100 - (94 + 6));
													local v177;
													local v178;
													while true do
														if ((1976 < (2110 + 1459)) and (v176 == (0 - 0))) then
															v177 = 0;
															v178 = nil;
															v176 = 1;
														end
														if ((4979 >= ((1722 - 572) + 803)) and (v176 == (4 - 3))) then
															while true do
																if (((34 + 2447) < (3728 - 826)) and (v177 == 0)) then
																	v178 = v92[(1 - 0) + 1];
																	v90[v178](v90[v178 + (755 - (311 + 443))]);
																	break;
																end
															end
															break;
														end
													end
												else
													v34[v92[1819 - (314 + 1502)]] = v90[v92[3 - 1]];
												end
												v71 = v71 + (2 - 1);
												break;
											end
										end
									end
								end
								v70 = 3;
							end
							if (v70 == 1) then
								v73 = {...};
								v74 = v12("#", ...) - 1;
								v70 = 2;
							end
							if (v70 == 3) then
								A, B = v28(v11(v75));
								if not A[1] then
									local v94 = v32[4][v71] or "?";
									error("Script error at [" .. v94 .. "]:" .. A[2]);
								else
									return v13(A, 2, B);
								end
								break;
							end
							if (v70 == 0) then
								v71 = 1;
								v72 = -1;
								v70 = 1;
							end
						end
					end;
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 4) then
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v29 = nil;
				function v29()
					local v42 = 0;
					local v43;
					local v44;
					local v45;
					local v46;
					local v47;
					local v48;
					local v49;
					while true do
						if ((1 + 1) == v42) then
							v47 = nil;
							v48 = nil;
							v42 = 3;
						end
						if (v42 ~= (1 - 0)) then
						else
							v45 = nil;
							v46 = nil;
							v42 = 2;
						end
						if (0 ~= v42) then
						else
							v43 = 0 + 0;
							v44 = nil;
							v42 = 1;
						end
						if (v42 ~= 3) then
						else
							v49 = nil;
							while true do
								local v79 = 56 - (33 + 23);
								while true do
									if ((1666 - (1485 + 180)) == v79) then
										if (v43 ~= (1140 - (94 + 1045))) then
										else
											local v98 = 0;
											local v99;
											while true do
												if (v98 == (0 + 0)) then
													v99 = 0;
													while true do
														if (v99 == (0 + 0)) then
															local v122 = 0;
															while true do
																if (v122 ~= 0) then
																else
																	v47 = {v44,v45,nil,v46};
																	v48 = v24();
																	v122 = 1;
																end
																if (v122 == 1) then
																	v99 = 1;
																	break;
																end
															end
														end
														if (v99 == 1) then
															v49 = {};
															v43 = 2 + 0;
															break;
														end
													end
													break;
												end
											end
										end
										if (v43 == (3 - 1)) then
											local v100 = 0;
											while true do
												if (v100 ~= (1 + 0)) then
												else
													for v110 = 1 + 0, v24() do
														local v111 = 30 - (9 + 21);
														local v112;
														local v113;
														local v114;
														local v115;
														while true do
															if (1 == v111) then
																v114 = nil;
																v115 = nil;
																v111 = 4 - 2;
															end
															if (v111 == 2) then
																while true do
																	if (v112 == (921 - (41 + 879))) then
																		v115 = nil;
																		while true do
																			if (v113 ~= 0) then
																			else
																				local v183 = 84 - (69 + 15);
																				while true do
																					if (v183 == 1) then
																						v113 = 508 - (446 + 61);
																						break;
																					end
																					if (v183 == (0 - 0)) then
																						v114 = 0;
																						v115 = nil;
																						v183 = 1;
																					end
																				end
																			end
																			if (v113 ~= 1) then
																			else
																				while true do
																					if (v114 ~= (0 - 0)) then
																					else
																						v115 = v22();
																						if (v21(v115, 1, 1) == (0 + 0)) then
																							local v213 = 0 + 0;
																							local v214;
																							local v215;
																							local v216;
																							local v217;
																							while true do
																								if (v213 == (4 - 2)) then
																									while true do
																										if (v214 == (2 + 0)) then
																											local v224 = 1046 - (750 + 296);
																											while true do
																												if (v224 == (0 + 0)) then
																													if (v21(v216, 2 - 1, 2 - 1) == 1) then
																														v217[2] = v49[v217[2 + 0]];
																													end
																													if (v21(v216, 2, 2) == (565 - (34 + 530))) then
																														v217[1462 - (848 + 611)] = v49[v217[899 - (151 + 745)]];
																													end
																													v224 = 1 + 0;
																												end
																												if ((1 + 0) ~= v224) then
																												else
																													v214 = 3 + 0;
																													break;
																												end
																											end
																										end
																										if (1 == v214) then
																											local v225 = 0 - 0;
																											local v226;
																											while true do
																												if (v225 ~= (0 - 0)) then
																												else
																													v226 = 0;
																													while true do
																														if (v226 == (0 - 0)) then
																															local v237 = 564 - (154 + 410);
																															while true do
																																if (v237 ~= (1997 - (1506 + 491))) then
																																else
																																	v217 = {v23(),v23(),nil,nil};
																																	if (v215 == (788 - (723 + 65))) then
																																		local v238 = 0 - 0;
																																		local v239;
																																		while true do
																																			if (v238 == 0) then
																																				v239 = 0;
																																				while true do
																																					if (v239 == (1390 - (750 + 640))) then
																																						v217[3] = v23();
																																						v217[724 - (275 + 445)] = v23();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v215 == (339 - (327 + 11))) then
																																		v217[1 + 2] = v24();
																																	elseif (v215 == 2) then
																																		v217[3] = v24() - ((1 + 1) ^ (35 - 19));
																																	elseif (v215 == (1027 - (717 + 307))) then
																																		local v244 = 543 - (309 + 234);
																																		local v245;
																																		local v246;
																																		while true do
																																			if (v244 ~= (1609 - (341 + 1267))) then
																																			else
																																				while true do
																																					if ((0 - 0) == v245) then
																																						v246 = 1674 - (1220 + 454);
																																						while true do
																																							if (v246 == 0) then
																																								v217[3] = v24() - ((5 - 3) ^ (31 - 15));
																																								v217[1620 - (183 + 1433)] = v23();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v244 == (483 - (183 + 300))) then
																																				v245 = 0;
																																				v246 = nil;
																																				v244 = 1713 - (1525 + 187);
																																			end
																																		end
																																	end
																																	v237 = 1 + 0;
																																end
																																if (v237 ~= (1 + 0)) then
																																else
																																	v226 = 1 - 0;
																																	break;
																																end
																															end
																														end
																														if (v226 == 1) then
																															v214 = 2;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if ((0 - 0) == v214) then
																											local v227 = 0;
																											while true do
																												if (v227 ~= (1642 - (94 + 1547))) then
																												else
																													v214 = 1;
																													break;
																												end
																												if (0 ~= v227) then
																												else
																													v215 = v21(v115, 6 - 4, 82 - (42 + 37));
																													v216 = v21(v115, 4, 1876 - (1356 + 514));
																													v227 = 1;
																												end
																											end
																										end
																										if (v214 == (1 + 2)) then
																											if (v21(v216, 3, 3) == 1) then
																												v217[14 - 10] = v49[v217[4]];
																											end
																											v44[v110] = v217;
																											break;
																										end
																									end
																									break;
																								end
																								if (v213 == (4 - 3)) then
																									v216 = nil;
																									v217 = nil;
																									v213 = 2;
																								end
																								if (v213 == (1207 - (242 + 965))) then
																									v214 = 0 - 0;
																									v215 = nil;
																									v213 = 1894 - (1677 + 216);
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if (v112 ~= 0) then
																	else
																		local v132 = 0;
																		while true do
																			if (v132 == 1) then
																				v112 = 1707 - (830 + 876);
																				break;
																			end
																			if (v132 ~= (0 - 0)) then
																			else
																				v113 = 0;
																				v114 = nil;
																				v132 = 1;
																			end
																		end
																	end
																end
																break;
															end
															if (v111 == 0) then
																v112 = 0;
																v113 = nil;
																v111 = 1;
															end
														end
													end
													v43 = 3;
													break;
												end
												if (v100 == (0 + 0)) then
													for v116 = 1 + 0, v48 do
														local v117 = 0;
														local v118;
														local v119;
														local v120;
														local v121;
														while true do
															if (v117 == 0) then
																v118 = 0 + 0;
																v119 = nil;
																v117 = 1;
															end
															if (v117 == 1) then
																v120 = nil;
																v121 = nil;
																v117 = 1136 - (477 + 657);
															end
															if (v117 == 2) then
																while true do
																	if (v118 ~= 0) then
																	else
																		local v133 = 1125 - (161 + 964);
																		while true do
																			if (v133 == (0 + 0)) then
																				v119 = 0 - 0;
																				v120 = nil;
																				v133 = 1 + 0;
																			end
																			if (v133 == 1) then
																				v118 = 1;
																				break;
																			end
																		end
																	end
																	if (v118 ~= (1 + 0)) then
																	else
																		v121 = nil;
																		while true do
																			if (v119 == 1) then
																				if (v120 == (17 - (6 + 10))) then
																					v121 = v22() ~= (0 - 0);
																				elseif (v120 == 2) then
																					v121 = v25();
																				elseif (v120 == (1062 - (225 + 834))) then
																					v121 = v26();
																				end
																				v49[v116] = v121;
																				break;
																			end
																			if (v119 ~= (0 + 0)) then
																			else
																				local v185 = 0;
																				while true do
																					if (v185 ~= 0) then
																					else
																						v120 = v22();
																						v121 = nil;
																						v185 = 1;
																					end
																					if (v185 == 1) then
																						v119 = 2 - 1;
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
													v47[11 - 8] = v22();
													v100 = 1;
												end
											end
										end
										break;
									end
									if (v79 == 0) then
										if ((7 - 4) == v43) then
											local v101 = 0;
											while true do
												local v106 = 0 - 0;
												while true do
													if (v106 == (0 - 0)) then
														if (v101 == 1) then
															return v47;
														end
														if (v101 ~= 0) then
														else
															local v123 = 0;
															while true do
																if (v123 == 1) then
																	v101 = 1;
																	break;
																end
																if (v123 ~= (0 + 0)) then
																else
																	for v134 = 1, v24() do
																		v45[v134 - (453 - (257 + 195))] = v29();
																	end
																	for v136 = 1425 - (1041 + 383), v24() do
																		v46[v136] = v24();
																	end
																	v123 = 1;
																end
															end
														end
														break;
													end
												end
											end
										end
										if (v43 ~= (0 - 0)) then
										else
											v44 = {};
											v45 = {};
											v46 = {};
											v43 = 1 + 0;
										end
										v79 = 1;
									end
								end
							end
							break;
						end
					end
				end
				v18 = 5;
			end
			if (v18 == 1) then
				function v21(v35, v36, v37)
					if v37 then
						local v76 = 1651 - ((3052 - (570 + 933)) + 102);
						local v77;
						while true do
							if (v76 == (384 - (255 + 129))) then
								v77 = (v35 / ((547 - (235 + 310)) ^ (v36 - ((884 - (644 + 239)) + 0)))) % ((1 + 1) ^ (((v37 - (1 + 0)) - (v36 - (1938 - (520 + 1417)))) + 1 + (1971 - (1064 + 907))));
								return v77 - (v77 % (1 - 0));
							end
						end
					else
						local v78 = (1712 - (689 + 1021)) ^ (v36 - (1 + 0));
						return (((v35 % (v78 + v78)) >= v78) and (1 + 0)) or (184 - (105 + 79));
					end
				end
				v22 = nil;
				function v22()
					local v50 = v1(v16, v19, v19);
					v19 = v19 + 1;
					return v50;
				end
				v23 = nil;
				v18 = 2;
			end
			if (v18 == 3) then
				function v25()
					local v51 = (1732 - (1587 + 82)) - ((1829 - (737 + 1047)) + 18);
					local v52;
					local v53;
					local v54;
					local v55;
					local v56;
					local v57;
					while true do
						if (v51 == (1 + 2)) then
							if (v56 == (0 + 0)) then
								if (v55 == (0 + 0)) then
									return v57 * (0 + (0 - 0));
								else
									local v95 = 0 + (0 - 0);
									while true do
										if (v95 == (0 + 0)) then
											v56 = 1155 - (1048 + 35 + 71);
											v54 = 0 - 0;
											break;
										end
									end
								end
							elseif (v56 == (6983 - 4936)) then
								return ((v55 == (0 + 0 + 0)) and (v57 * (((914 - (627 + 285)) - 1) / (0 - (0 + 0))))) or (v57 * NaN);
							end
							return v8(v57, v56 - (495 + 528)) * (v54 + (v55 / ((2 - 0) ^ (46 + 6))));
						end
						if (v51 == (1 + 1)) then
							v56 = v21(v53, 6 + 15, 10 + 21);
							v57 = ((v21(v53, 900 - ((2217 - (1300 + 393)) + 344)) == (1 + 0)) and -(3 - 2)) or (1 + 0);
							v51 = 3 + 0;
						end
						if ((3 - 2) == v51) then
							v54 = 1012 - ((1106 - (73 + 38)) + 16);
							v55 = (v21(v53, 2 - 1, 58 - 38) * ((2 - 0) ^ (22 + 10))) + v52;
							v51 = 1812 - (937 + 873);
						end
						if (((1670 - (1513 + 157)) + 0) == v51) then
							v52 = v24();
							v53 = v24();
							v51 = 1263 - (272 + 990);
						end
					end
				end
				v26 = nil;
				function v26(v38)
					local v58 = 0;
					local v59;
					local v60;
					while true do
						if (v58 == (2 - 1)) then
							v59 = v3(v16, v19, (v19 + v38) - (1 + 0));
							v19 = v19 + v38;
							v58 = 3 - 1;
						end
						if (v58 == (1746 - (1410 + 336))) then
							v59 = nil;
							if not v38 then
								local v82 = 0 + 0;
								while true do
									if (v82 == (0 - 0)) then
										v38 = v24();
										if (v38 == ((0 + 0) - 0)) then
											return "";
										end
										break;
									end
								end
							end
							v58 = 1593 - (976 + 616);
						end
						if (v58 == 3) then
							return v6(v60);
						end
						if (v58 == 2) then
							v60 = {};
							for v80 = 1, #v59 do
								v60[v80] = v2(v1(v3(v59, v80, v80)));
							end
							v58 = 3;
						end
					end
				end
				v27 = v24;
				v18 = 4;
			end
			if (v18 == 2) then
				function v23()
					local v61, v62 = v1(v16, v19, v19 + (3 - 1));
					v19 = v19 + (6 - 4);
					return (v62 * (652 - 396)) + v61;
				end
				v24 = nil;
				function v24()
					local v63 = 0 + 0;
					local v64;
					local v65;
					local v66;
					local v67;
					while true do
						if (v63 == 1) then
							return (v67 * 16777216) + (v66 * (66006 - (131 + 339))) + (v65 * (138 + (1648 - (1058 + 472)))) + v64;
						end
						if (v63 == ((643 + 746) - ((890 - (112 + 386)) + 997))) then
							v64, v65, v66, v67 = v1(v16, v19, v19 + 3);
							v19 = v19 + (1571 - (677 + 890));
							v63 = 357 - (76 + 280);
						end
					end
				end
				v25 = nil;
				v18 = 3;
			end
		end
	end
	vv9(), ...);
end
