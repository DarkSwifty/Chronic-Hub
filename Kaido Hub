--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (v18 == 1) then
				v21 = nil;
				function v21(v31, v32, v33)
					if v33 then
						local v68 = (v31 / ((2 + 0) ^ (v32 - 1))) % ((1091 - (305 + 784)) ^ (((v33 - ((972 - (71 + 6)) - (663 + 231))) - (v32 - (109 - (72 + 36)))) + 1 + 0));
						return v68 - (v68 % (651 - (139 + 511)));
					else
						local v69 = ((877 - (556 + 319)) + (1434 - (1137 + 297))) ^ (v32 - (294 - (206 + 87)));
						return (((v31 % (v69 + v69)) >= v69) and (2 - 1)) or (0 - 0);
					end
				end
				v22 = nil;
				v18 = 2;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v34)
					if (v1(v34, 2) == 79) then
						v20 = v0(v3(v34, 1, 1));
						return "";
					else
						local v70 = v2(v0(v34, 16));
						if v20 then
							local v77 = v5(v70, v20);
							v20 = nil;
							return v77;
						else
							return v70;
						end
					end
				end);
				v18 = 1;
			end
			if (v18 == 7) then
				function v30(v35, v36, v37)
					local v39 = v35[1];
					local v40 = v35[2];
					local v41 = v35[3];
					return function(...)
						local v71 = 0;
						local v72;
						local v73;
						local v74;
						local v75;
						local v76;
						while true do
							if (v71 == 1) then
								v74 = {...};
								v75 = v12("#", ...) - 1;
								v71 = 2;
							end
							if (v71 == 0) then
								v72 = 1;
								v73 = -1;
								v71 = 1;
							end
							if (v71 == 3) then
								A, B = v28(v11(v76));
								if not A[1] then
									local v80 = v35[4][v72] or "?";
									error("Script error at [" .. v80 .. "]:" .. A[2]);
								else
									return v13(A, 2, B);
								end
								break;
							end
							if (v71 == 2) then
								v76 = nil;
								function v76()
									local v81 = v39;
									local v82 = v40;
									local v83 = v41;
									local v84 = v28;
									local v85 = {};
									local v86 = {};
									local v87 = {};
									for v92 = 0, v75 do
										if ((v92 >= v83) or ((2193 - (1511 + 292)) > (4574 - 2221))) then
											v85[v92 - v83] = v74[v92 + 1 + 0];
										else
											v87[v92] = v74[v92 + (3 - 2)];
										end
									end
									local v88 = (v75 - v83) + (2 - 1);
									local v89;
									local v90;
									while true do
										local v93 = 0 + 0;
										while true do
											if ((v93 == 0) or ((127 + 3 + 6) >= (7915 - 6214))) then
												local v100 = 1145 - (459 + 686);
												while true do
													if ((v100 == 0) or ((4750 - (86 + 861)) == (787 + 626))) then
														v89 = v81[v72];
														v90 = v89[1313 - (1104 + 208)];
														v100 = (2 - 0) - (2 - 1);
													end
													if (((100 + 349) <= (14508 - 10398)) and ((2 - 1) == v100)) then
														v93 = 1 + 0;
														break;
													end
												end
											end
											if ((v93 == 1) or (3239 <= (1734 - (31 + 121)))) then
												if (((587 + 1340) == (1272 + 655)) and (v90 <= (53 - 41))) then
													if ((v90 <= ((8 - 6) + (52 - (10 + 39)))) or ((839 + 698) >= (4901 - (1264 + 273)))) then
														if (((3820 - (668 + 571)) == (4105 - (1008 + 516))) and (v90 <= (1495 - (596 + 710 + 187)))) then
															if ((v90 <= (801 - (136 + 665))) or ((1179 - (82 + 539)) > 1617)) then
																do
																	return;
																end
															elseif ((((2602 - (925 + 645)) - ((1835 - 1443) + 76)) < (2874 - (77 + 162))) and (v90 > (142 - (11 + 130)))) then
																v72 = v89[394 - (193 + 198)];
															else
																v87[v89[(2 - 1) + 1]]();
															end
														elseif ((v90 <= (3 + 0)) or ((4422 + 479) == (119 + 506))) then
															local v113 = 0 - 0;
															local v114;
															local v115;
															while true do
																if ((0 == v113) or (1538 >= 3727)) then
																	v114 = v89[1 + 1];
																	v115 = v87[v114];
																	v113 = 440 - (404 + 35);
																end
																if (((1811 - (804 + 876)) == (433 - 302)) and ((2 - 1) == v113)) then
																	for v177 = v114 + (687 - (598 + 88)), v89[912 - (866 + 43)] do
																		v7(v115, v87[v177]);
																	end
																	break;
																end
															end
														elseif (((2096 + 1048) <= (4720 - (482 + 707))) and (v90 == 4)) then
															v87[v89[1503 - (1195 + 306)]] = v87[v89[1 + 2]];
														else
															local v131 = 0;
															local v132;
															local v133;
															while true do
																if ((((6944 - (572 + 90)) - 4770) == 1512) and (v131 == (1 + 0))) then
																	v87[v132 + ((15 - 11) - 3)] = v133;
																	v87[v132] = v133[v89[1 + 3]];
																	break;
																end
																if ((4032 >= (4203 - 2716)) and (v131 == (333 - (183 + 11 + 139)))) then
																	local v184 = 0 + 0;
																	while true do
																		if ((1765 > (397 + 102)) and (v184 == 0)) then
																			v132 = v89[8 - (19 - 13)];
																			v133 = v87[v89[3 + 0]];
																			v184 = 745 - (43 + 701);
																		end
																		if ((v184 == (2 - 1)) or (2478 < (2469 - (295 + 1316)))) then
																			v131 = 123 - (99 + 23);
																			break;
																		end
																	end
																end
															end
														end
													elseif ((v90 <= 8) or ((3958 - (343 + 152 + (952 - 338))) == 299)) then
														if (((17680 - 13992) >= (3175 - (1358 + 342))) and (v90 <= 6)) then
															v87[v89[1 + 1]][v89[1121 - (141 + 977)]] = v87[v89[5 - 1]];
														elseif (((1833 - (488 + 290)) < (181 + 3358)) and (v90 == (9 - 2))) then
															if (v87[v89[2 - 0]] or (4668 <= 2235)) then
																v72 = v72 + (3 - 2);
															else
																v72 = v89[(1 - 0) + 2];
															end
														else
															local v134 = 0 - 0;
															local v135;
															local v136;
															while true do
																if ((((2766 - 618) - (360 + 81)) == (7 + 1700)) and (v134 == (2 - 1))) then
																	while true do
																		if ((v135 == (0 - 0)) or ((675 + 2229) == 946)) then
																			v136 = v89[482 - (435 + 45)];
																			v87[v136] = v87[v136](v13(v87, v136 + 1, v89[1817 - (492 + 1322)]));
																			break;
																		end
																	end
																	break;
																end
																if ((v134 == 0) or ((6309 - 2141) < ((5715 - (308 + 1080)) - (14 + 467)))) then
																	v135 = (3484 - 1485) - (722 + 1277);
																	v136 = nil;
																	v134 = 2 - 1;
																end
															end
														end
													elseif (((8538 - 5642) > (1824 - 785)) and (v90 <= (14 - (6 - 2)))) then
														if ((v90 > (2 + 3 + 4)) or ((1713 + 3185) <= 1910)) then
															if ((1701 >= 432) and (v87[v89[3 - 1]] == v89[1282 - (373 + 905)])) then
																v72 = v72 + ((42 - 16) - (4 + 21));
															else
																v72 = v89[7 - 4];
															end
														else
															local v137 = 0 + 0;
															local v138;
															local v139;
															local v140;
															local v141;
															while true do
																if ((v137 == ((242 + 1253) - (1290 + 203))) or ((10 + 171) > (1185 + 873))) then
																	while true do
																		if ((v138 == 0) or ((2938 - (456 + 332)) > (9090 - 5768))) then
																			local v194 = 0;
																			local v195;
																			while true do
																				if ((v194 == ((482 - (213 + 269)) - (0 - 0))) or ((1783 + 687) > 4350)) then
																					v195 = 1855 - (123 + 1732);
																					while true do
																						if (((2 + 18) == (51 - 31)) and (v195 == ((7413 - 5786) - (1576 + 51)))) then
																							v139 = v89[2];
																							v140 = v87[v139];
																							v195 = 1 + 0;
																						end
																						if (((6111 - 3988) >= (1845 - (843 + 440))) and (v195 == (1632 - (575 + 1056)))) then
																							v138 = 1 + 0;
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		if (((317 - (159 + 70)) <= (2984 - (485 + 305))) and ((1 + 0) == v138)) then
																			v141 = v89[1 + 2];
																			for v209 = 1 - 0, v141 do
																				v140[v209] = v87[v139 + v209];
																			end
																			break;
																		end
																	end
																	break;
																end
																if (((3926 - ((1451 - (1178 + 77)) + 727)) >= 1487) and (v137 == (0 + 0))) then
																	v138 = 1875 - (477 + 1398);
																	v139 = nil;
																	v137 = 1 + 0;
																end
																if ((v137 == (1 + 0)) or (((5454 - 4007) - 1015) >= 2679)) then
																	local v185 = 0;
																	while true do
																		if (((2283 - (398 + 358)) == (376 + 1151)) and (v185 == (1453 - (396 + (2225 - 1168))))) then
																			v140 = nil;
																			v141 = nil;
																			v185 = 1 - 0;
																		end
																		if ((v185 == (3 - 2)) or ((4429 - (1498 + 349)) == 1969)) then
																			v137 = 1566 - ((4809 - 3708) + 463);
																			break;
																		end
																	end
																end
															end
														end
													elseif ((v90 == (165 - (28 + 126))) or (((1628 + 468) - 1354) == (562 + 73))) then
														v87[v89[(2389 - 564) - (1149 + 674)]] = v89[12 - 9] ~= 0;
													else
														v87[v89[2]] = {};
													end
												elseif (((1165 + (2338 - (10 + 1264))) >= (3067 - 1981)) and (v90 <= (50 - 32))) then
													if ((v90 <= (1184 - (902 + 267))) or ((623 + 196) >= (2437 + 373))) then
														if ((v90 <= (35 - 22)) or ((634 + 3136) < 1164)) then
															for v126 = v89[1 + 1], v89[1548 - (936 + 609)] do
																v87[v126] = nil;
															end
														elseif (((3788 - (25 + (617 - (101 + 219)))) > 806) and (v90 == 14)) then
															local v144 = 0 + 0;
															local v145;
															local v146;
															while true do
																if (((614 + 221) == (2204 - (480 + 889))) and (v144 == ((1829 - (248 + 1558)) - (15 + 8)))) then
																	v145 = (860 - (448 + 412)) + 0;
																	v146 = nil;
																	v144 = 1870 - (289 + 1580);
																end
																if (((983 + 1149) <= (41 + 2530)) and (v144 == (1 + 0))) then
																	while true do
																		if ((v145 == (0 + 0)) or (1278 == ((5602 - (96 + 810)) - 2160))) then
																			v146 = v89[842 - (684 + 156)];
																			v87[v146] = v87[v146]();
																			break;
																		end
																	end
																	break;
																end
															end
														else
															local v147 = 0;
															local v148;
															local v149;
															local v150;
															local v151;
															local v152;
															while true do
																if (((111 + 229) > (66 + 30)) and ((2 + 0) == v147)) then
																	v152 = nil;
																	while true do
																		if (((160 + 2676) >= (1818 + 789)) and (v148 == (3 - 1))) then
																			for v212 = v149, v73 do
																				local v213 = 0 + 0;
																				while true do
																					if ((v213 == (0 - 0)) or ((3891 - (57 + (1574 - (522 + 28)))) == (4075 + 446))) then
																						v152 = v152 + (2 - 1);
																						v87[v212] = v150[v152];
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((v148 == 1) or ((4290 + (905 - 699)) <= (3422 - (14 + 11)))) then
																			local v199 = 0;
																			local v200;
																			while true do
																				if (((640 + 662 + 1378) > (33 + 100)) and (v199 == (0 - 0))) then
																					v200 = 0;
																					while true do
																						if ((v200 == (661 - (22 + 638))) or ((1248 + 1669) <= (1593 - 1002))) then
																							v148 = 2;
																							break;
																						end
																						if ((v200 == (0 - (0 + 0))) or ((4754 - (1045 + (1451 - (181 + 712)))) <= (5991 - 4103))) then
																							v73 = (v151 + v149) - (1 + (0 - 0));
																							v152 = 0 - (1862 - (1579 + 283));
																							v200 = 1689 - ((3028 - 1977) + 637);
																						end
																					end
																					break;
																				end
																			end
																		end
																		if ((v148 == 0) or ((1959 + 499) >= (7489 - 3489))) then
																			local v201 = 1888 - (941 + 946 + 1);
																			local v202;
																			while true do
																				if ((1284 == (2020 - (234 + 502))) and ((0 + 0) == v201)) then
																					v202 = 1250 - ((1120 - (120 + 84)) + 334);
																					while true do
																						if (((4262 - (435 + 146)) == (5008 - (306 + 284 + 346 + 391))) and (v202 == (1107 - (347 + 760)))) then
																							v149 = v89[1822 - (1006 + 814)];
																							v150, v151 = v84(v87[v149](v13(v87, v149 + 1 + 0, v89[3 + 0])));
																							v202 = 3 - 2;
																						end
																						if ((v202 == (4 - (2 + 1))) or (2185 < (1095 + 479))) then
																							v148 = 759 - (512 + (650 - 404));
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
																if (((0 + 0) == v147) or (2621 >= (16595 - 12575))) then
																	local v186 = 0 + 0;
																	while true do
																		if ((v186 == (0 - 0)) or ((3711 - (1128 + 720)) >= (718 + 2345))) then
																			v148 = 0;
																			v149 = nil;
																			v186 = 3 - 2;
																		end
																		if ((v186 == ((1538 - (1100 + 437)) - 0)) or ((3792 - (913 + 156)) > (918 + 3527))) then
																			v147 = 1;
																			break;
																		end
																	end
																end
																if ((v147 == (3 - 2)) or ((1255 - (503 + 401)) == 3037)) then
																	local v187 = 0;
																	while true do
																		if ((914 > (74 + 630)) and (v187 == (1561 - (931 + 629)))) then
																			v147 = 2;
																			break;
																		end
																		if (((2000 - (1383 - (802 + 71))) == (3711 - 2221)) and ((0 - 0) == v187)) then
																			v150 = nil;
																			v151 = nil;
																			v187 = 3 - 2;
																		end
																	end
																end
															end
														end
													elseif (((2181 - 1717) <= (1673 + 826)) and (v90 <= (1627 - (1111 + 500)))) then
														v87[v89[6 - 4]] = v87[v89[1366 - (448 + 915)]][v89[4]];
													elseif ((336 < (5196 - (688 + 47))) and (v90 > (5 + 12))) then
														v37[v89[11 - 8]] = v87[v89[539 - (439 + 98)]];
													else
														local v155 = 0 + 0;
														local v156;
														while true do
															if ((v155 == (0 - 0)) or ((293 + 201) == (2235 - 644))) then
																v156 = v89[1655 - (749 + 904)];
																v87[v156] = v87[v156](v13(v87, v156 + 1 + 0, v73));
																break;
															end
														end
													end
												elseif (((2495 + 2208) >= 4072) and (v90 <= (809 - (501 + 287)))) then
													if ((v90 <= (10 + 9)) or ((3786 - (90 + 875)) >= 4029)) then
														local v120 = 0 + 0;
														local v121;
														while true do
															if (((4114 + 270) == ((3606 + 4604) - 3826)) and (v120 == (0 - 0))) then
																v121 = v89[3 - 1];
																v87[v121](v13(v87, v121 + 1 + 0, v89[1305 - (155 + 1147)]));
																break;
															end
														end
													elseif ((v90 == (497 - (453 + 24))) or (((2938 + 1147) - (411 + 469)) >= ((15726 - 10734) - (41 + 1009)))) then
														v87[v89[2 + 0]][v89[3]] = v89[15 - 11];
													else
														v87[v89[2 - 0]] = v89[1005 - (107 + 895)];
													end
												elseif ((((1288 + 13780) - (8361 + 2550)) > (68 + 1243)) and (v90 <= (83 - (114 - (51 + 3))))) then
													if ((v90 > (1980 - (905 + 1053))) or (354 >= (3415 + 732))) then
														local v161 = 844 - (606 + 238);
														local v162;
														local v163;
														while true do
															if ((v161 == 1) or ((4831 - 2305) < (1872 - (130 + 1143)))) then
																while true do
																	if (((217 + 3272) < (5341 - (104 + 1044))) and (v162 == 0)) then
																		v163 = v89[1 + 1];
																		v87[v163](v87[v163 + (1 - (0 - 0))]);
																		break;
																	end
																end
																break;
															end
															if ((v161 == 0) or ((2843 - (299 + 1037)) >= (8921 - 5183))) then
																v162 = 1787 - (422 + 1365);
																v163 = nil;
																v161 = 4 - 3;
															end
														end
													else
														v87[v89[2 + 0]] = v37[v89[8 - 5]];
													end
												elseif ((v90 == (376 - (30 + 322))) or ((14805 - 10711) >= (6650 - (1547 + 439)))) then
													v87[v89[1547 - (884 + 661)]] = v30(v82[v89[(1479 - (11 + 508)) - (411 + 414 + 132)]], nil, v37);
												elseif (((5715 - 2864) < (6030 - (1140 + 41))) and (v89[5 - 3] == v87[v89[1410 - ((3183 - (1679 + 148)) + 50)]])) then
													v72 = v72 + 1 + 0 + 0;
												else
													v72 = v89[1 + 2];
												end
												v72 = v72 + (3 - 2);
												break;
											end
										end
									end
								end
								v71 = 3;
							end
						end
					end;
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 2) then
				function v22()
					local v42 = v1(v16, v19, v19);
					v19 = v19 + 1;
					return v42;
				end
				v23 = nil;
				function v23()
					local v43, v44 = v1(v16, v19, v19 + (6 - 4));
					v19 = v19 + (2 - 0);
					return (v44 * (689 - 433)) + v43;
				end
				v18 = 3;
			end
			if (v18 == 6) then
				v29 = nil;
				function v29()
					local v45 = 1951 - (1666 + 285);
					local v46;
					local v47;
					local v48;
					local v49;
					local v50;
					local v51;
					while true do
						local v66 = 276 - (59 + 217);
						local v67;
						while true do
							if (v66 == (0 - 0)) then
								v67 = 0 - 0;
								while true do
									if (v67 == (0 - 0)) then
										local v91 = 1679 - (1312 + 367);
										while true do
											if ((0 + 0) ~= v91) then
											else
												if (v45 ~= (0 - 0)) then
												else
													local v101 = 0 + 0;
													local v102;
													while true do
														if (v101 == (0 - 0)) then
															v102 = 0 + 0;
															while true do
																if (v102 ~= (0 + 0)) then
																else
																	local v111 = 0 - 0;
																	while true do
																		if (v111 == 1) then
																			v102 = 1;
																			break;
																		end
																		if (v111 == (0 + 0)) then
																			v46 = {};
																			v47 = {};
																			v111 = 1;
																		end
																	end
																end
																if (v102 ~= (2 - 1)) then
																else
																	v48 = {};
																	v45 = 1 - 0;
																	break;
																end
															end
															break;
														end
													end
												end
												if ((1789 - (273 + 1514)) ~= v45) then
												else
													local v103 = 0 + 0;
													local v104;
													while true do
														if (v103 ~= (889 - (374 + 515))) then
														else
															v104 = 0 - 0;
															while true do
																if (v104 ~= 0) then
																else
																	local v112 = 0 - 0;
																	while true do
																		if (v112 == 1) then
																			v104 = 3 - 2;
																			break;
																		end
																		if (v112 == (0 + 0)) then
																			for v171 = 1 + 0, v50 do
																				local v172 = 0 - 0;
																				local v173;
																				local v174;
																				local v175;
																				local v176;
																				while true do
																					if (v172 == (2 + 0)) then
																						while true do
																							if (v173 == (544 - (460 + 84))) then
																								local v214 = 0;
																								while true do
																									if (v214 ~= 0) then
																									else
																										v174 = 0;
																										v175 = nil;
																										v214 = 1705 - (151 + 1553);
																									end
																									if (v214 ~= (1345 - (969 + 375))) then
																									else
																										v173 = 1 + 0;
																										break;
																									end
																								end
																							end
																							if (v173 ~= (2 - 1)) then
																							else
																								v176 = nil;
																								while true do
																									if (v174 ~= (1 + 0)) then
																									else
																										if (v175 == (1 + 0)) then
																											v176 = v22() ~= (1237 - (697 + 540));
																										elseif (v175 == (4 - 2)) then
																											v176 = v25();
																										elseif (v175 == (3 + 0)) then
																											v176 = v26();
																										end
																										v51[v171] = v176;
																										break;
																									end
																									if (v174 == 0) then
																										local v218 = 1562 - (854 + 708);
																										local v219;
																										while true do
																											if (v218 == 0) then
																												v219 = 0 + 0;
																												while true do
																													if (v219 == (325 - (254 + 70))) then
																														v174 = 1 + 0;
																														break;
																													end
																													if (v219 ~= 0) then
																													else
																														local v231 = 0;
																														while true do
																															if (v231 ~= (0 + 0)) then
																															else
																																v175 = v22();
																																v176 = nil;
																																v231 = 1;
																															end
																															if (v231 ~= 1) then
																															else
																																v219 = 1 + 0;
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (v172 == (1306 - (777 + 528))) then
																						v175 = nil;
																						v176 = nil;
																						v172 = 2;
																					end
																					if (v172 ~= (0 - 0)) then
																					else
																						v173 = 1050 - (519 + 531);
																						v174 = nil;
																						v172 = 1;
																					end
																				end
																			end
																			v49[3] = v22();
																			v112 = 1;
																		end
																	end
																end
																if (v104 == 1) then
																	for v122 = 1, v24() do
																		local v123 = 0;
																		local v124;
																		local v125;
																		while true do
																			if (v123 ~= (2 - 1)) then
																			else
																				while true do
																					if ((901 - (193 + 708)) == v124) then
																						v125 = v22();
																						if (v21(v125, 1 + 0, 2 - 1) == (0 - 0)) then
																							local v204 = 1704 - (601 + 1103);
																							local v205;
																							local v206;
																							local v207;
																							local v208;
																							while true do
																								if ((1140 - (20 + 1119)) == v204) then
																									v207 = nil;
																									v208 = nil;
																									v204 = 7 - 5;
																								end
																								if (v204 == 0) then
																									v205 = 966 - (833 + 133);
																									v206 = nil;
																									v204 = 1 + 0;
																								end
																								if (v204 == (1567 - (481 + 1084))) then
																									while true do
																										if (v205 == (1 + 0)) then
																											local v223 = 1659 - (839 + 820);
																											local v224;
																											while true do
																												if (v223 ~= (1334 - (551 + 783))) then
																												else
																													v224 = 0 + 0;
																													while true do
																														if (v224 == (0 - 0)) then
																															local v236 = 0 + 0;
																															while true do
																																if (v236 == 1) then
																																	v224 = 1 + 0;
																																	break;
																																end
																																if ((241 - (211 + 30)) == v236) then
																																	v208 = {v23(),v23(),nil,nil};
																																	if (v206 == (0 - 0)) then
																																		local v238 = 0;
																																		local v239;
																																		local v240;
																																		local v241;
																																		while true do
																																			if (v238 ~= (1769 - (447 + 1321))) then
																																			else
																																				v241 = nil;
																																				while true do
																																					if (v239 == (1503 - (534 + 969))) then
																																						v240 = 250 - (198 + 52);
																																						v241 = nil;
																																						v239 = 4 - 3;
																																					end
																																					if ((1 - 0) == v239) then
																																						while true do
																																							if ((0 + 0) == v240) then
																																								v241 = 0 + 0;
																																								while true do
																																									if (v241 ~= (1019 - (663 + 356))) then
																																									else
																																										v208[3] = v23();
																																										v208[87 - (17 + 66)] = v23();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v238 == (0 + 0)) then
																																				v239 = 0;
																																				v240 = nil;
																																				v238 = 4 - 3;
																																			end
																																		end
																																	elseif (v206 == (1678 - (512 + 1165))) then
																																		v208[6 - 3] = v24();
																																	elseif (v206 == 2) then
																																		v208[1456 - (130 + 1323)] = v24() - ((2 + 0) ^ 16);
																																	elseif (v206 == (1001 - (136 + 862))) then
																																		local v244 = 0;
																																		local v245;
																																		while true do
																																			if (v244 == 0) then
																																				v245 = 0 - 0;
																																				while true do
																																					if (v245 ~= (1198 - (783 + 415))) then
																																					else
																																						v208[5 - 2] = v24() - ((725 - (497 + 226)) ^ (42 - 26));
																																						v208[1 + 3] = v23();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v236 = 3 - 2;
																																end
																															end
																														end
																														if (v224 == (1 + 0)) then
																															v205 = 847 - (834 + 11);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v205 ~= (5 - 2)) then
																										else
																											if (v21(v207, 11 - 8, 1462 - (159 + 1300)) == 1) then
																												v208[7 - 3] = v51[v208[19 - 15]];
																											end
																											v46[v122] = v208;
																											break;
																										end
																										if (v205 == 2) then
																											local v226 = 0 + 0;
																											while true do
																												if (v226 == 0) then
																													if (v21(v207, 700 - (38 + 661), 2 - 1) == 1) then
																														v208[2] = v51[v208[4 - 2]];
																													end
																													if (v21(v207, 3 - 1, 5 - 3) == (741 - (70 + 670))) then
																														v208[1 + 2] = v51[v208[1212 - (371 + 838)]];
																													end
																													v226 = 1 + 0;
																												end
																												if (v226 ~= (1 - 0)) then
																												else
																													v205 = 10 - 7;
																													break;
																												end
																											end
																										end
																										if (v205 ~= (965 - (32 + 933))) then
																										else
																											local v227 = 0 - 0;
																											local v228;
																											while true do
																												if (v227 == (0 + 0)) then
																													v228 = 0 + 0;
																													while true do
																														if ((0 + 0) ~= v228) then
																														else
																															local v237 = 1520 - (852 + 668);
																															while true do
																																if (v237 == 1) then
																																	v228 = 291 - (139 + 151);
																																	break;
																																end
																																if (v237 ~= 0) then
																																else
																																	v206 = v21(v125, 2 - 0, 2 + 1);
																																	v207 = v21(v125, 11 - 7, 1236 - (1084 + 146));
																																	v237 = 402 - (45 + 356);
																																end
																															end
																														end
																														if (v228 == (876 - (264 + 611))) then
																															v205 = 656 - (301 + 354);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (v123 == (0 - 0)) then
																				v124 = 0;
																				v125 = nil;
																				v123 = 3 - 2;
																			end
																		end
																	end
																	v45 = 14 - 11;
																	break;
																end
															end
															break;
														end
													end
												end
												v91 = 1;
											end
											if (v91 ~= (1 + 0)) then
											else
												v67 = 2 - 1;
												break;
											end
										end
									end
									if (v67 == (4 - 3)) then
										if (v45 == (1908 - (225 + 1682))) then
											local v94 = 232 - (160 + 72);
											while true do
												if (v94 ~= 0) then
												else
													v49 = {v46,v47,nil,v48};
													v50 = v24();
													v94 = 1431 - (1191 + 239);
												end
												if (v94 == (1 + 0)) then
													v51 = {};
													v45 = 2;
													break;
												end
											end
										end
										if (v45 == (14 - 11)) then
											local v95 = 0;
											while true do
												if (v95 ~= 1) then
												else
													return v49;
												end
												if (v95 ~= 0) then
												else
													for v105 = 1 - 0, v24() do
														v47[v105 - (4 - 3)] = v29();
													end
													for v107 = 1164 - (1115 + 48), v24() do
														v48[v107] = v24();
													end
													v95 = 1025 - (241 + 783);
												end
											end
										end
										break;
									end
								end
								break;
							end
						end
					end
				end
				v30 = nil;
				v18 = 7;
			end
			if (v18 == 4) then
				function v25()
					local v52 = (0 - 0) + 0;
					local v53;
					local v54;
					local v55;
					local v56;
					local v57;
					local v58;
					while true do
						if (v52 == 2) then
							v57 = v21(v54, 21, 31 + 0);
							v58 = ((v21(v54, (1241 - (17 + 1136)) - 56) == (918 - (42 + (1349 - (213 + 261))))) and -(612 - (386 + 225))) or (1 + 0);
							v52 = 3;
						end
						if (v52 == (1302 - (556 + (1771 - 1026)))) then
							v55 = 1 + 0;
							v56 = (v21(v54, 1, 1 + 19) * ((1 + 1) ^ 32)) + v53;
							v52 = 6 - 4;
						end
						if (v52 == (0 + 0)) then
							v53 = v24();
							v54 = v24();
							v52 = (8 - 5) - 2;
						end
						if ((4 - (1 + 0)) == v52) then
							if (v57 == (1001 - (512 + 489))) then
								if (v56 == (306 - (193 + 113))) then
									return v58 * 0;
								else
									v57 = 1;
									v55 = 0 - 0;
								end
							elseif (v57 == (5608 - 3561)) then
								return ((v56 == (386 - (50 + 8 + 328))) and (v58 * ((1 - 0) / (0 - 0)))) or (v58 * NaN);
							end
							return v8(v58, v57 - (2352 - (153 + 1051 + 125))) * (v55 + (v56 / ((2 - 0) ^ (161 - (98 + 11)))));
						end
					end
				end
				v26 = nil;
				function v26(v38)
					local v59 = 0 - 0;
					local v60;
					local v61;
					while true do
						if ((1 - 0) == v59) then
							v60 = v3(v16, v19, (v19 + v38) - (761 - (633 + 127)));
							v19 = v19 + v38;
							v59 = 2;
						end
						if (v59 == ((0 - 0) + 0 + 0)) then
							v60 = nil;
							if not v38 then
								v38 = v24();
								if (v38 == (0 + (821 - (347 + 474)))) then
									return "";
								end
							end
							v59 = 1 + 0;
						end
						if ((1247 - (984 + 260)) == v59) then
							return v6(v61);
						end
						if (v59 == (1 + 1)) then
							v61 = {};
							for v78 = 301 - (189 + 111), #v60 do
								v61[v78] = v2(v1(v3(v60, v78, v78)));
							end
							v59 = 2 + (1220 - (923 + 296));
						end
					end
				end
				v18 = 5;
			end
			if (v18 == 5) then
				v27 = v24;
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v18 = 6;
			end
			if (v18 == 3) then
				v24 = nil;
				function v24()
					local v62, v63, v64, v65 = v1(v16, v19, v19 + (8 - 5));
					v19 = v19 + 3 + 1;
					return (v65 * (16777800 - (318 + 266))) + (v64 * 65536) + (v63 * 256) + v62;
				end
				v25 = nil;
				v18 = 4;
			end
		end
	end
	vv9(), ...);
end
